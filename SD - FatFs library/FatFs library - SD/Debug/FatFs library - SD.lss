
FatFs library - SD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000011dc  00001270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080011a  0080011a  0000128a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000128a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000562f  00000000  00000000  000015a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001192  00000000  00000000  00006bd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000311e  00000000  00000000  00007d69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ea0  00000000  00000000  0000ae88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d92  00000000  00000000  0000bd28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000064cf  00000000  00000000  0000caba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  00012f89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
       4:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
       8:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
       c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      10:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      14:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      18:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      1c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      20:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      24:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      28:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      2c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      30:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      34:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      38:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      3c:	0c 94 6d 05 	jmp	0xada	; 0xada <__vector_15>
      40:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      44:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      48:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      4c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      50:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      54:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      58:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      5c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      60:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      64:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      68:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      6c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      70:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      74:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      78:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      7c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      80:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      84:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      88:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      8c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
      90:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d8 e0       	ldi	r29, 0x08	; 8
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	ec ed       	ldi	r30, 0xDC	; 220
      a8:	f1 e1       	ldi	r31, 0x11	; 17
      aa:	02 c0       	rjmp	.+4      	; 0xb0 <__do_copy_data+0x10>
      ac:	05 90       	lpm	r0, Z+
      ae:	0d 92       	st	X+, r0
      b0:	aa 31       	cpi	r26, 0x1A	; 26
      b2:	b1 07       	cpc	r27, r17
      b4:	d9 f7       	brne	.-10     	; 0xac <__do_copy_data+0xc>

000000b6 <__do_clear_bss>:
      b6:	21 e0       	ldi	r18, 0x01	; 1
      b8:	aa e1       	ldi	r26, 0x1A	; 26
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	01 c0       	rjmp	.+2      	; 0xc0 <.do_clear_bss_start>

000000be <.do_clear_bss_loop>:
      be:	1d 92       	st	X+, r1

000000c0 <.do_clear_bss_start>:
      c0:	a2 32       	cpi	r26, 0x22	; 34
      c2:	b2 07       	cpc	r27, r18
      c4:	e1 f7       	brne	.-8      	; 0xbe <.do_clear_bss_loop>
      c6:	0e 94 ac 05 	call	0xb58	; 0xb58 <main>
      ca:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <_exit>

000000ce <__bad_interrupt>:
      ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d2 <disk_status>:

		return res;
	}

	return RES_PARERR;
}
      d2:	0e 94 cb 07 	call	0xf96	; 0xf96 <mmc_disk_status>
      d6:	81 11       	cpse	r24, r1
      d8:	81 e0       	ldi	r24, 0x01	; 1
      da:	08 95       	ret

000000dc <disk_initialize>:
      dc:	0e 94 f6 06 	call	0xdec	; 0xdec <mmc_disk_initialize>
      e0:	08 95       	ret

000000e2 <disk_read>:
      e2:	0f 93       	push	r16
      e4:	1f 93       	push	r17
      e6:	cb 01       	movw	r24, r22
      e8:	ba 01       	movw	r22, r20
      ea:	a9 01       	movw	r20, r18
      ec:	98 01       	movw	r18, r16
      ee:	0e 94 ce 07 	call	0xf9c	; 0xf9c <mmc_disk_read>
      f2:	81 11       	cpse	r24, r1
      f4:	84 e0       	ldi	r24, 0x04	; 4
      f6:	1f 91       	pop	r17
      f8:	0f 91       	pop	r16
      fa:	08 95       	ret

000000fc <disk_write>:
      fc:	0f 93       	push	r16
      fe:	1f 93       	push	r17
     100:	cb 01       	movw	r24, r22
     102:	ba 01       	movw	r22, r20
     104:	a9 01       	movw	r20, r18
     106:	98 01       	movw	r18, r16
     108:	0e 94 1c 08 	call	0x1038	; 0x1038 <mmc_disk_write>
     10c:	81 11       	cpse	r24, r1
     10e:	84 e0       	ldi	r24, 0x04	; 4
     110:	1f 91       	pop	r17
     112:	0f 91       	pop	r16
     114:	08 95       	ret

00000116 <disk_timerproc>:
/*-----------------------------------------------------------------------*/


void disk_timerproc (void)
{
	mmc_disk_timerproc();
     116:	0e 94 8b 08 	call	0x1116	; 0x1116 <mmc_disk_timerproc>
     11a:	08 95       	ret

0000011c <ld_word>:
		/* Make sure that no pending write process in the lower layer */
		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
	}

	return res;
}
     11c:	fc 01       	movw	r30, r24
     11e:	21 81       	ldd	r18, Z+1	; 0x01
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	32 2f       	mov	r19, r18
     124:	22 27       	eor	r18, r18
     126:	80 81       	ld	r24, Z
     128:	a9 01       	movw	r20, r18
     12a:	48 2b       	or	r20, r24
     12c:	ca 01       	movw	r24, r20
     12e:	08 95       	ret

00000130 <ld_dword>:
     130:	fc 01       	movw	r30, r24
     132:	63 81       	ldd	r22, Z+3	; 0x03
     134:	86 2f       	mov	r24, r22
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	a0 e0       	ldi	r26, 0x00	; 0
     13a:	b0 e0       	ldi	r27, 0x00	; 0
     13c:	ba 2f       	mov	r27, r26
     13e:	a9 2f       	mov	r26, r25
     140:	98 2f       	mov	r25, r24
     142:	88 27       	eor	r24, r24
     144:	22 81       	ldd	r18, Z+2	; 0x02
     146:	82 2b       	or	r24, r18
     148:	ba 2f       	mov	r27, r26
     14a:	a9 2f       	mov	r26, r25
     14c:	98 2f       	mov	r25, r24
     14e:	88 27       	eor	r24, r24
     150:	21 81       	ldd	r18, Z+1	; 0x01
     152:	82 2b       	or	r24, r18
     154:	ba 2f       	mov	r27, r26
     156:	a9 2f       	mov	r26, r25
     158:	98 2f       	mov	r25, r24
     15a:	88 27       	eor	r24, r24
     15c:	20 81       	ld	r18, Z
     15e:	bc 01       	movw	r22, r24
     160:	cd 01       	movw	r24, r26
     162:	62 2b       	or	r22, r18
     164:	08 95       	ret

00000166 <get_ldnumber>:
     166:	cf 93       	push	r28
     168:	df 93       	push	r29
     16a:	ec 01       	movw	r28, r24
     16c:	a8 81       	ld	r26, Y
     16e:	b9 81       	ldd	r27, Y+1	; 0x01
     170:	10 97       	sbiw	r26, 0x00	; 0
     172:	31 f1       	breq	.+76     	; 0x1c0 <get_ldnumber+0x5a>
     174:	fd 01       	movw	r30, r26
     176:	9f 01       	movw	r18, r30
     178:	2f 5f       	subi	r18, 0xFF	; 255
     17a:	3f 4f       	sbci	r19, 0xFF	; 255
     17c:	90 81       	ld	r25, Z
     17e:	91 32       	cpi	r25, 0x21	; 33
     180:	18 f0       	brcs	.+6      	; 0x188 <get_ldnumber+0x22>
     182:	f9 01       	movw	r30, r18
     184:	9a 33       	cpi	r25, 0x3A	; 58
     186:	b9 f7       	brne	.-18     	; 0x176 <get_ldnumber+0x10>
     188:	9a 33       	cpi	r25, 0x3A	; 58
     18a:	e9 f4       	brne	.+58     	; 0x1c6 <get_ldnumber+0x60>
     18c:	4c 91       	ld	r20, X
     18e:	80 ed       	ldi	r24, 0xD0	; 208
     190:	84 0f       	add	r24, r20
     192:	8a 30       	cpi	r24, 0x0A	; 10
     194:	40 f4       	brcc	.+16     	; 0x1a6 <get_ldnumber+0x40>
     196:	12 96       	adiw	r26, 0x02	; 2
     198:	2a 17       	cp	r18, r26
     19a:	3b 07       	cpc	r19, r27
     19c:	39 f4       	brne	.+14     	; 0x1ac <get_ldnumber+0x46>
     19e:	50 e0       	ldi	r21, 0x00	; 0
     1a0:	40 53       	subi	r20, 0x30	; 48
     1a2:	51 09       	sbc	r21, r1
     1a4:	05 c0       	rjmp	.+10     	; 0x1b0 <get_ldnumber+0x4a>
     1a6:	41 e0       	ldi	r20, 0x01	; 1
     1a8:	50 e0       	ldi	r21, 0x00	; 0
     1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <get_ldnumber+0x4a>
     1ac:	41 e0       	ldi	r20, 0x01	; 1
     1ae:	50 e0       	ldi	r21, 0x00	; 0
     1b0:	14 16       	cp	r1, r20
     1b2:	15 06       	cpc	r1, r21
     1b4:	5c f0       	brlt	.+22     	; 0x1cc <get_ldnumber+0x66>
     1b6:	39 83       	std	Y+1, r19	; 0x01
     1b8:	28 83       	st	Y, r18
     1ba:	84 2f       	mov	r24, r20
     1bc:	95 2f       	mov	r25, r21
     1be:	08 c0       	rjmp	.+16     	; 0x1d0 <get_ldnumber+0x6a>
     1c0:	8f ef       	ldi	r24, 0xFF	; 255
     1c2:	9f ef       	ldi	r25, 0xFF	; 255
     1c4:	05 c0       	rjmp	.+10     	; 0x1d0 <get_ldnumber+0x6a>
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <get_ldnumber+0x6a>
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	9f ef       	ldi	r25, 0xFF	; 255
     1d0:	df 91       	pop	r29
     1d2:	cf 91       	pop	r28
     1d4:	08 95       	ret

000001d6 <sync_window>:
     1d6:	8f 92       	push	r8
     1d8:	9f 92       	push	r9
     1da:	af 92       	push	r10
     1dc:	bf 92       	push	r11
     1de:	ef 92       	push	r14
     1e0:	ff 92       	push	r15
     1e2:	0f 93       	push	r16
     1e4:	1f 93       	push	r17
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	fc 01       	movw	r30, r24
     1ec:	23 81       	ldd	r18, Z+3	; 0x03
     1ee:	22 23       	and	r18, r18
     1f0:	d1 f1       	breq	.+116    	; 0x266 <sync_window+0x90>
     1f2:	ec 01       	movw	r28, r24
     1f4:	7c 01       	movw	r14, r24
     1f6:	ff e2       	ldi	r31, 0x2F	; 47
     1f8:	ef 0e       	add	r14, r31
     1fa:	f1 1c       	adc	r15, r1
     1fc:	2b a5       	ldd	r18, Y+43	; 0x2b
     1fe:	3c a5       	ldd	r19, Y+44	; 0x2c
     200:	4d a5       	ldd	r20, Y+45	; 0x2d
     202:	5e a5       	ldd	r21, Y+46	; 0x2e
     204:	01 e0       	ldi	r16, 0x01	; 1
     206:	10 e0       	ldi	r17, 0x00	; 0
     208:	b7 01       	movw	r22, r14
     20a:	89 81       	ldd	r24, Y+1	; 0x01
     20c:	0e 94 7e 00 	call	0xfc	; 0xfc <disk_write>
     210:	81 11       	cpse	r24, r1
     212:	2b c0       	rjmp	.+86     	; 0x26a <sync_window+0x94>
     214:	1b 82       	std	Y+3, r1	; 0x03
     216:	0b a5       	ldd	r16, Y+43	; 0x2b
     218:	1c a5       	ldd	r17, Y+44	; 0x2c
     21a:	2d a5       	ldd	r18, Y+45	; 0x2d
     21c:	3e a5       	ldd	r19, Y+46	; 0x2e
     21e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     220:	98 a1       	ldd	r25, Y+32	; 0x20
     222:	a9 a1       	ldd	r26, Y+33	; 0x21
     224:	ba a1       	ldd	r27, Y+34	; 0x22
     226:	48 01       	movw	r8, r16
     228:	59 01       	movw	r10, r18
     22a:	88 1a       	sub	r8, r24
     22c:	99 0a       	sbc	r9, r25
     22e:	aa 0a       	sbc	r10, r26
     230:	bb 0a       	sbc	r11, r27
     232:	8f 89       	ldd	r24, Y+23	; 0x17
     234:	98 8d       	ldd	r25, Y+24	; 0x18
     236:	a9 8d       	ldd	r26, Y+25	; 0x19
     238:	ba 8d       	ldd	r27, Y+26	; 0x1a
     23a:	88 16       	cp	r8, r24
     23c:	99 06       	cpc	r9, r25
     23e:	aa 06       	cpc	r10, r26
     240:	bb 06       	cpc	r11, r27
     242:	a8 f4       	brcc	.+42     	; 0x26e <sync_window+0x98>
     244:	6a 81       	ldd	r22, Y+2	; 0x02
     246:	62 30       	cpi	r22, 0x02	; 2
     248:	a1 f4       	brne	.+40     	; 0x272 <sync_window+0x9c>
     24a:	a9 01       	movw	r20, r18
     24c:	98 01       	movw	r18, r16
     24e:	28 0f       	add	r18, r24
     250:	39 1f       	adc	r19, r25
     252:	4a 1f       	adc	r20, r26
     254:	5b 1f       	adc	r21, r27
     256:	01 e0       	ldi	r16, 0x01	; 1
     258:	10 e0       	ldi	r17, 0x00	; 0
     25a:	b7 01       	movw	r22, r14
     25c:	89 81       	ldd	r24, Y+1	; 0x01
     25e:	0e 94 7e 00 	call	0xfc	; 0xfc <disk_write>
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	07 c0       	rjmp	.+14     	; 0x274 <sync_window+0x9e>
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	05 c0       	rjmp	.+10     	; 0x274 <sync_window+0x9e>
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	03 c0       	rjmp	.+6      	; 0x274 <sync_window+0x9e>
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	01 c0       	rjmp	.+2      	; 0x274 <sync_window+0x9e>
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	1f 91       	pop	r17
     27a:	0f 91       	pop	r16
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	bf 90       	pop	r11
     282:	af 90       	pop	r10
     284:	9f 90       	pop	r9
     286:	8f 90       	pop	r8
     288:	08 95       	ret

0000028a <move_window>:
     28a:	8f 92       	push	r8
     28c:	9f 92       	push	r9
     28e:	af 92       	push	r10
     290:	bf 92       	push	r11
     292:	ff 92       	push	r15
     294:	0f 93       	push	r16
     296:	1f 93       	push	r17
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	ec 01       	movw	r28, r24
     29e:	4a 01       	movw	r8, r20
     2a0:	5b 01       	movw	r10, r22
     2a2:	8b a5       	ldd	r24, Y+43	; 0x2b
     2a4:	9c a5       	ldd	r25, Y+44	; 0x2c
     2a6:	ad a5       	ldd	r26, Y+45	; 0x2d
     2a8:	be a5       	ldd	r27, Y+46	; 0x2e
     2aa:	84 17       	cp	r24, r20
     2ac:	95 07       	cpc	r25, r21
     2ae:	a6 07       	cpc	r26, r22
     2b0:	b7 07       	cpc	r27, r23
     2b2:	e9 f0       	breq	.+58     	; 0x2ee <move_window+0x64>
     2b4:	ce 01       	movw	r24, r28
     2b6:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <sync_window>
     2ba:	f8 2e       	mov	r15, r24
     2bc:	81 11       	cpse	r24, r1
     2be:	18 c0       	rjmp	.+48     	; 0x2f0 <move_window+0x66>
     2c0:	01 e0       	ldi	r16, 0x01	; 1
     2c2:	10 e0       	ldi	r17, 0x00	; 0
     2c4:	a5 01       	movw	r20, r10
     2c6:	94 01       	movw	r18, r8
     2c8:	be 01       	movw	r22, r28
     2ca:	61 5d       	subi	r22, 0xD1	; 209
     2cc:	7f 4f       	sbci	r23, 0xFF	; 255
     2ce:	89 81       	ldd	r24, Y+1	; 0x01
     2d0:	0e 94 71 00 	call	0xe2	; 0xe2 <disk_read>
     2d4:	88 23       	and	r24, r24
     2d6:	31 f0       	breq	.+12     	; 0x2e4 <move_window+0x5a>
     2d8:	ff 24       	eor	r15, r15
     2da:	f3 94       	inc	r15
     2dc:	88 24       	eor	r8, r8
     2de:	8a 94       	dec	r8
     2e0:	98 2c       	mov	r9, r8
     2e2:	54 01       	movw	r10, r8
     2e4:	8b a6       	std	Y+43, r8	; 0x2b
     2e6:	9c a6       	std	Y+44, r9	; 0x2c
     2e8:	ad a6       	std	Y+45, r10	; 0x2d
     2ea:	be a6       	std	Y+46, r11	; 0x2e
     2ec:	01 c0       	rjmp	.+2      	; 0x2f0 <move_window+0x66>
     2ee:	f1 2c       	mov	r15, r1
     2f0:	8f 2d       	mov	r24, r15
     2f2:	df 91       	pop	r29
     2f4:	cf 91       	pop	r28
     2f6:	1f 91       	pop	r17
     2f8:	0f 91       	pop	r16
     2fa:	ff 90       	pop	r15
     2fc:	bf 90       	pop	r11
     2fe:	af 90       	pop	r10
     300:	9f 90       	pop	r9
     302:	8f 90       	pop	r8
     304:	08 95       	ret

00000306 <check_fs>:
     306:	ef 92       	push	r14
     308:	ff 92       	push	r15
     30a:	0f 93       	push	r16
     30c:	1f 93       	push	r17
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	ec 01       	movw	r28, r24
     314:	1b 82       	std	Y+3, r1	; 0x03
     316:	8f ef       	ldi	r24, 0xFF	; 255
     318:	9f ef       	ldi	r25, 0xFF	; 255
     31a:	dc 01       	movw	r26, r24
     31c:	8b a7       	std	Y+43, r24	; 0x2b
     31e:	9c a7       	std	Y+44, r25	; 0x2c
     320:	ad a7       	std	Y+45, r26	; 0x2d
     322:	be a7       	std	Y+46, r27	; 0x2e
     324:	ce 01       	movw	r24, r28
     326:	0e 94 45 01 	call	0x28a	; 0x28a <move_window>
     32a:	81 11       	cpse	r24, r1
     32c:	71 c0       	rjmp	.+226    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     32e:	ce 01       	movw	r24, r28
     330:	83 5d       	subi	r24, 0xD3	; 211
     332:	9d 4f       	sbci	r25, 0xFD	; 253
     334:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     338:	7c 01       	movw	r14, r24
     33a:	8f a5       	ldd	r24, Y+47	; 0x2f
     33c:	8b 3e       	cpi	r24, 0xEB	; 235
     33e:	29 f0       	breq	.+10     	; 0x34a <check_fs+0x44>
     340:	89 3e       	cpi	r24, 0xE9	; 233
     342:	19 f0       	breq	.+6      	; 0x34a <check_fs+0x44>
     344:	88 3e       	cpi	r24, 0xE8	; 232
     346:	09 f0       	breq	.+2      	; 0x34a <check_fs+0x44>
     348:	5b c0       	rjmp	.+182    	; 0x400 <__EEPROM_REGION_LENGTH__>
     34a:	25 e5       	ldi	r18, 0x55	; 85
     34c:	e2 16       	cp	r14, r18
     34e:	2a ea       	ldi	r18, 0xAA	; 170
     350:	f2 06       	cpc	r15, r18
     352:	61 f4       	brne	.+24     	; 0x36c <check_fs+0x66>
     354:	48 e0       	ldi	r20, 0x08	; 8
     356:	50 e0       	ldi	r21, 0x00	; 0
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	71 e0       	ldi	r23, 0x01	; 1
     35c:	ce 01       	movw	r24, r28
     35e:	8f 57       	subi	r24, 0x7F	; 127
     360:	9f 4f       	sbci	r25, 0xFF	; 255
     362:	0e 94 df 08 	call	0x11be	; 0x11be <memcmp>
     366:	89 2b       	or	r24, r25
     368:	09 f4       	brne	.+2      	; 0x36c <check_fs+0x66>
     36a:	55 c0       	rjmp	.+170    	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     36c:	ce 01       	movw	r24, r28
     36e:	ca 96       	adiw	r24, 0x3a	; 58
     370:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     374:	2c ad       	ldd	r18, Y+60	; 0x3c
     376:	8c 01       	movw	r16, r24
     378:	01 50       	subi	r16, 0x01	; 1
     37a:	11 09       	sbc	r17, r1
     37c:	08 23       	and	r16, r24
     37e:	19 23       	and	r17, r25
     380:	01 15       	cp	r16, r1
     382:	11 05       	cpc	r17, r1
     384:	e9 f5       	brne	.+122    	; 0x400 <__EEPROM_REGION_LENGTH__>
     386:	81 15       	cp	r24, r1
     388:	32 e0       	ldi	r19, 0x02	; 2
     38a:	93 07       	cpc	r25, r19
     38c:	c8 f1       	brcs	.+114    	; 0x400 <__EEPROM_REGION_LENGTH__>
     38e:	81 30       	cpi	r24, 0x01	; 1
     390:	92 40       	sbci	r25, 0x02	; 2
     392:	b0 f5       	brcc	.+108    	; 0x400 <__EEPROM_REGION_LENGTH__>
     394:	22 23       	and	r18, r18
     396:	a1 f1       	breq	.+104    	; 0x400 <__EEPROM_REGION_LENGTH__>
     398:	82 2f       	mov	r24, r18
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	9c 01       	movw	r18, r24
     39e:	21 50       	subi	r18, 0x01	; 1
     3a0:	31 09       	sbc	r19, r1
     3a2:	82 23       	and	r24, r18
     3a4:	93 23       	and	r25, r19
     3a6:	89 2b       	or	r24, r25
     3a8:	59 f5       	brne	.+86     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3aa:	ce 01       	movw	r24, r28
     3ac:	cd 96       	adiw	r24, 0x3d	; 61
     3ae:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     3b2:	89 2b       	or	r24, r25
     3b4:	29 f1       	breq	.+74     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3b6:	8f ad       	ldd	r24, Y+63	; 0x3f
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	02 97       	sbiw	r24, 0x02	; 2
     3be:	00 f5       	brcc	.+64     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3c0:	ce 01       	movw	r24, r28
     3c2:	80 5c       	subi	r24, 0xC0	; 192
     3c4:	9f 4f       	sbci	r25, 0xFF	; 255
     3c6:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     3ca:	89 2b       	or	r24, r25
     3cc:	c9 f0       	breq	.+50     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3ce:	ce 01       	movw	r24, r28
     3d0:	8e 5b       	subi	r24, 0xBE	; 190
     3d2:	9f 4f       	sbci	r25, 0xFF	; 255
     3d4:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     3d8:	80 38       	cpi	r24, 0x80	; 128
     3da:	91 05       	cpc	r25, r1
     3dc:	50 f4       	brcc	.+20     	; 0x3f2 <check_fs+0xec>
     3de:	ce 01       	movw	r24, r28
     3e0:	81 5b       	subi	r24, 0xB1	; 177
     3e2:	9f 4f       	sbci	r25, 0xFF	; 255
     3e4:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     3e8:	61 15       	cp	r22, r1
     3ea:	71 05       	cpc	r23, r1
     3ec:	81 40       	sbci	r24, 0x01	; 1
     3ee:	91 05       	cpc	r25, r1
     3f0:	38 f0       	brcs	.+14     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3f2:	ce 01       	movw	r24, r28
     3f4:	8b 5b       	subi	r24, 0xBB	; 187
     3f6:	9f 4f       	sbci	r25, 0xFF	; 255
     3f8:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     3fc:	89 2b       	or	r24, r25
     3fe:	81 f4       	brne	.+32     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     400:	35 e5       	ldi	r19, 0x55	; 85
     402:	e3 16       	cp	r14, r19
     404:	3a ea       	ldi	r19, 0xAA	; 170
     406:	f3 06       	cpc	r15, r19
     408:	49 f4       	brne	.+18     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     40a:	02 e0       	ldi	r16, 0x02	; 2
     40c:	10 e0       	ldi	r17, 0x00	; 0
     40e:	08 c0       	rjmp	.+16     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     410:	04 e0       	ldi	r16, 0x04	; 4
     412:	10 e0       	ldi	r17, 0x00	; 0
     414:	05 c0       	rjmp	.+10     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     416:	00 e0       	ldi	r16, 0x00	; 0
     418:	10 e0       	ldi	r17, 0x00	; 0
     41a:	02 c0       	rjmp	.+4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     41c:	03 e0       	ldi	r16, 0x03	; 3
     41e:	10 e0       	ldi	r17, 0x00	; 0
     420:	c8 01       	movw	r24, r16
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	1f 91       	pop	r17
     428:	0f 91       	pop	r16
     42a:	ff 90       	pop	r15
     42c:	ef 90       	pop	r14
     42e:	08 95       	ret

00000430 <find_volume>:
     430:	cf 92       	push	r12
     432:	df 92       	push	r13
     434:	ef 92       	push	r14
     436:	ff 92       	push	r15
     438:	0f 93       	push	r16
     43a:	1f 93       	push	r17
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	cd b7       	in	r28, 0x3d	; 61
     442:	de b7       	in	r29, 0x3e	; 62
     444:	60 97       	sbiw	r28, 0x10	; 16
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	de bf       	out	0x3e, r29	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	cd bf       	out	0x3d, r28	; 61
     450:	6c 01       	movw	r12, r24
     452:	7b 01       	movw	r14, r22
     454:	40 e0       	ldi	r20, 0x00	; 0
     456:	50 e0       	ldi	r21, 0x00	; 0
     458:	ba 01       	movw	r22, r20
     45a:	0e 94 83 01 	call	0x306	; 0x306 <check_fs>
     45e:	82 30       	cpi	r24, 0x02	; 2
     460:	91 05       	cpc	r25, r1
     462:	69 f1       	breq	.+90     	; 0x4be <find_volume+0x8e>
     464:	18 f4       	brcc	.+6      	; 0x46c <find_volume+0x3c>
     466:	e1 14       	cp	r14, r1
     468:	f1 04       	cpc	r15, r1
     46a:	61 f5       	brne	.+88     	; 0x4c4 <find_volume+0x94>
     46c:	83 30       	cpi	r24, 0x03	; 3
     46e:	91 05       	cpc	r25, r1
     470:	09 f0       	breq	.+2      	; 0x474 <find_volume+0x44>
     472:	5b c0       	rjmp	.+182    	; 0x52a <find_volume+0xfa>
     474:	21 e0       	ldi	r18, 0x01	; 1
     476:	28 b9       	out	0x08, r18	; 8
     478:	58 c0       	rjmp	.+176    	; 0x52a <find_volume+0xfa>
     47a:	c8 01       	movw	r24, r16
     47c:	82 95       	swap	r24
     47e:	92 95       	swap	r25
     480:	90 7f       	andi	r25, 0xF0	; 240
     482:	98 27       	eor	r25, r24
     484:	80 7f       	andi	r24, 0xF0	; 240
     486:	98 27       	eor	r25, r24
     488:	8a 53       	subi	r24, 0x3A	; 58
     48a:	9e 4f       	sbci	r25, 0xFE	; 254
     48c:	96 01       	movw	r18, r12
     48e:	21 5d       	subi	r18, 0xD1	; 209
     490:	3f 4f       	sbci	r19, 0xFF	; 255
     492:	82 0f       	add	r24, r18
     494:	93 1f       	adc	r25, r19
     496:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     49a:	f8 01       	movw	r30, r16
     49c:	ee 0f       	add	r30, r30
     49e:	ff 1f       	adc	r31, r31
     4a0:	ee 0f       	add	r30, r30
     4a2:	ff 1f       	adc	r31, r31
     4a4:	21 e0       	ldi	r18, 0x01	; 1
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	2c 0f       	add	r18, r28
     4aa:	3d 1f       	adc	r19, r29
     4ac:	e2 0f       	add	r30, r18
     4ae:	f3 1f       	adc	r31, r19
     4b0:	60 83       	st	Z, r22
     4b2:	71 83       	std	Z+1, r23	; 0x01
     4b4:	82 83       	std	Z+2, r24	; 0x02
     4b6:	93 83       	std	Z+3, r25	; 0x03
     4b8:	0f 5f       	subi	r16, 0xFF	; 255
     4ba:	1f 4f       	sbci	r17, 0xFF	; 255
     4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <find_volume+0x98>
     4be:	00 e0       	ldi	r16, 0x00	; 0
     4c0:	10 e0       	ldi	r17, 0x00	; 0
     4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <find_volume+0x98>
     4c4:	00 e0       	ldi	r16, 0x00	; 0
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	04 30       	cpi	r16, 0x04	; 4
     4ca:	11 05       	cpc	r17, r1
     4cc:	b0 f2       	brcs	.-84     	; 0x47a <find_volume+0x4a>
     4ce:	e1 14       	cp	r14, r1
     4d0:	f1 04       	cpc	r15, r1
     4d2:	21 f0       	breq	.+8      	; 0x4dc <find_volume+0xac>
     4d4:	87 01       	movw	r16, r14
     4d6:	01 50       	subi	r16, 0x01	; 1
     4d8:	11 09       	sbc	r17, r1
     4da:	02 c0       	rjmp	.+4      	; 0x4e0 <find_volume+0xb0>
     4dc:	00 e0       	ldi	r16, 0x00	; 0
     4de:	10 e0       	ldi	r17, 0x00	; 0
     4e0:	f8 01       	movw	r30, r16
     4e2:	ee 0f       	add	r30, r30
     4e4:	ff 1f       	adc	r31, r31
     4e6:	ee 0f       	add	r30, r30
     4e8:	ff 1f       	adc	r31, r31
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	8c 0f       	add	r24, r28
     4f0:	9d 1f       	adc	r25, r29
     4f2:	e8 0f       	add	r30, r24
     4f4:	f9 1f       	adc	r31, r25
     4f6:	40 81       	ld	r20, Z
     4f8:	51 81       	ldd	r21, Z+1	; 0x01
     4fa:	62 81       	ldd	r22, Z+2	; 0x02
     4fc:	73 81       	ldd	r23, Z+3	; 0x03
     4fe:	41 15       	cp	r20, r1
     500:	51 05       	cpc	r21, r1
     502:	61 05       	cpc	r22, r1
     504:	71 05       	cpc	r23, r1
     506:	21 f0       	breq	.+8      	; 0x510 <find_volume+0xe0>
     508:	c6 01       	movw	r24, r12
     50a:	0e 94 83 01 	call	0x306	; 0x306 <check_fs>
     50e:	02 c0       	rjmp	.+4      	; 0x514 <find_volume+0xe4>
     510:	83 e0       	ldi	r24, 0x03	; 3
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	e1 14       	cp	r14, r1
     516:	f1 04       	cpc	r15, r1
     518:	41 f4       	brne	.+16     	; 0x52a <find_volume+0xfa>
     51a:	82 30       	cpi	r24, 0x02	; 2
     51c:	91 05       	cpc	r25, r1
     51e:	28 f0       	brcs	.+10     	; 0x52a <find_volume+0xfa>
     520:	0f 5f       	subi	r16, 0xFF	; 255
     522:	1f 4f       	sbci	r17, 0xFF	; 255
     524:	04 30       	cpi	r16, 0x04	; 4
     526:	11 05       	cpc	r17, r1
     528:	d8 f2       	brcs	.-74     	; 0x4e0 <find_volume+0xb0>
     52a:	60 96       	adiw	r28, 0x10	; 16
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	ef 90       	pop	r14
     542:	df 90       	pop	r13
     544:	cf 90       	pop	r12
     546:	08 95       	ret

00000548 <mount_volume>:
     548:	2f 92       	push	r2
     54a:	3f 92       	push	r3
     54c:	4f 92       	push	r4
     54e:	5f 92       	push	r5
     550:	6f 92       	push	r6
     552:	7f 92       	push	r7
     554:	8f 92       	push	r8
     556:	9f 92       	push	r9
     558:	af 92       	push	r10
     55a:	bf 92       	push	r11
     55c:	cf 92       	push	r12
     55e:	df 92       	push	r13
     560:	ef 92       	push	r14
     562:	ff 92       	push	r15
     564:	0f 93       	push	r16
     566:	1f 93       	push	r17
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	cd b7       	in	r28, 0x3d	; 61
     56e:	de b7       	in	r29, 0x3e	; 62
     570:	2e 97       	sbiw	r28, 0x0e	; 14
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	f8 94       	cli
     576:	de bf       	out	0x3e, r29	; 62
     578:	0f be       	out	0x3f, r0	; 63
     57a:	cd bf       	out	0x3d, r28	; 61
     57c:	7b 01       	movw	r14, r22
     57e:	d4 2e       	mov	r13, r20
     580:	db 01       	movw	r26, r22
     582:	1d 92       	st	X+, r1
     584:	1c 92       	st	X, r1
     586:	0e 94 b3 00 	call	0x166	; 0x166 <get_ldnumber>
     58a:	8c 01       	movw	r16, r24
     58c:	99 23       	and	r25, r25
     58e:	0c f4       	brge	.+2      	; 0x592 <mount_volume+0x4a>
     590:	1c c2       	rjmp	.+1080   	; 0x9ca <__stack+0xcb>
     592:	fc 01       	movw	r30, r24
     594:	ee 0f       	add	r30, r30
     596:	ff 1f       	adc	r31, r31
     598:	e4 5e       	subi	r30, 0xE4	; 228
     59a:	fe 4f       	sbci	r31, 0xFE	; 254
     59c:	20 81       	ld	r18, Z
     59e:	31 81       	ldd	r19, Z+1	; 0x01
     5a0:	3e 87       	std	Y+14, r19	; 0x0e
     5a2:	2d 87       	std	Y+13, r18	; 0x0d
     5a4:	21 15       	cp	r18, r1
     5a6:	31 05       	cpc	r19, r1
     5a8:	09 f4       	brne	.+2      	; 0x5ac <mount_volume+0x64>
     5aa:	11 c2       	rjmp	.+1058   	; 0x9ce <__stack+0xcf>
     5ac:	d7 01       	movw	r26, r14
     5ae:	2d 93       	st	X+, r18
     5b0:	3c 93       	st	X, r19
     5b2:	bd 2d       	mov	r27, r13
     5b4:	be 7f       	andi	r27, 0xFE	; 254
     5b6:	db 2e       	mov	r13, r27
     5b8:	f9 01       	movw	r30, r18
     5ba:	80 81       	ld	r24, Z
     5bc:	88 23       	and	r24, r24
     5be:	61 f0       	breq	.+24     	; 0x5d8 <mount_volume+0x90>
     5c0:	81 81       	ldd	r24, Z+1	; 0x01
     5c2:	0e 94 69 00 	call	0xd2	; 0xd2 <disk_status>
     5c6:	80 fd       	sbrc	r24, 0
     5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <mount_volume+0x90>
     5ca:	dd 20       	and	r13, r13
     5cc:	09 f4       	brne	.+2      	; 0x5d0 <mount_volume+0x88>
     5ce:	01 c2       	rjmp	.+1026   	; 0x9d2 <__stack+0xd3>
     5d0:	82 fd       	sbrc	r24, 2
     5d2:	01 c2       	rjmp	.+1026   	; 0x9d6 <__stack+0xd7>
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	22 c2       	rjmp	.+1092   	; 0xa1c <__stack+0x11d>
     5d8:	ad 85       	ldd	r26, Y+13	; 0x0d
     5da:	be 85       	ldd	r27, Y+14	; 0x0e
     5dc:	1c 92       	st	X, r1
     5de:	11 96       	adiw	r26, 0x01	; 1
     5e0:	0c 93       	st	X, r16
     5e2:	80 2f       	mov	r24, r16
     5e4:	0e 94 6e 00 	call	0xdc	; 0xdc <disk_initialize>
     5e8:	80 fd       	sbrc	r24, 0
     5ea:	f7 c1       	rjmp	.+1006   	; 0x9da <__stack+0xdb>
     5ec:	dd 20       	and	r13, r13
     5ee:	11 f0       	breq	.+4      	; 0x5f4 <mount_volume+0xac>
     5f0:	82 fd       	sbrc	r24, 2
     5f2:	f5 c1       	rjmp	.+1002   	; 0x9de <__stack+0xdf>
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	70 e0       	ldi	r23, 0x00	; 0
     5f8:	8d 85       	ldd	r24, Y+13	; 0x0d
     5fa:	9e 85       	ldd	r25, Y+14	; 0x0e
     5fc:	0e 94 18 02 	call	0x430	; 0x430 <find_volume>
     600:	84 30       	cpi	r24, 0x04	; 4
     602:	91 05       	cpc	r25, r1
     604:	09 f4       	brne	.+2      	; 0x608 <mount_volume+0xc0>
     606:	ed c1       	rjmp	.+986    	; 0x9e2 <__stack+0xe3>
     608:	02 97       	sbiw	r24, 0x02	; 2
     60a:	08 f0       	brcs	.+2      	; 0x60e <mount_volume+0xc6>
     60c:	ec c1       	rjmp	.+984    	; 0x9e6 <__stack+0xe7>
     60e:	ed 85       	ldd	r30, Y+13	; 0x0d
     610:	fe 85       	ldd	r31, Y+14	; 0x0e
     612:	43 a4       	ldd	r4, Z+43	; 0x2b
     614:	54 a4       	ldd	r5, Z+44	; 0x2c
     616:	65 a4       	ldd	r6, Z+45	; 0x2d
     618:	76 a4       	ldd	r7, Z+46	; 0x2e
     61a:	cf 01       	movw	r24, r30
     61c:	ca 96       	adiw	r24, 0x3a	; 58
     61e:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     622:	81 15       	cp	r24, r1
     624:	92 40       	sbci	r25, 0x02	; 2
     626:	09 f0       	breq	.+2      	; 0x62a <mount_volume+0xe2>
     628:	e0 c1       	rjmp	.+960    	; 0x9ea <__stack+0xeb>
     62a:	8d 85       	ldd	r24, Y+13	; 0x0d
     62c:	9e 85       	ldd	r25, Y+14	; 0x0e
     62e:	8b 5b       	subi	r24, 0xBB	; 187
     630:	9f 4f       	sbci	r25, 0xFF	; 255
     632:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     636:	4c 01       	movw	r8, r24
     638:	a1 2c       	mov	r10, r1
     63a:	b1 2c       	mov	r11, r1
     63c:	81 14       	cp	r8, r1
     63e:	91 04       	cpc	r9, r1
     640:	a1 04       	cpc	r10, r1
     642:	b1 04       	cpc	r11, r1
     644:	41 f4       	brne	.+16     	; 0x656 <mount_volume+0x10e>
     646:	8d 85       	ldd	r24, Y+13	; 0x0d
     648:	9e 85       	ldd	r25, Y+14	; 0x0e
     64a:	8d 5a       	subi	r24, 0xAD	; 173
     64c:	9f 4f       	sbci	r25, 0xFF	; 255
     64e:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     652:	4b 01       	movw	r8, r22
     654:	5c 01       	movw	r10, r24
     656:	ad 85       	ldd	r26, Y+13	; 0x0d
     658:	be 85       	ldd	r27, Y+14	; 0x0e
     65a:	57 96       	adiw	r26, 0x17	; 23
     65c:	8d 92       	st	X+, r8
     65e:	9d 92       	st	X+, r9
     660:	ad 92       	st	X+, r10
     662:	bc 92       	st	X, r11
     664:	5a 97       	sbiw	r26, 0x1a	; 26
     666:	fd 01       	movw	r30, r26
     668:	a7 ad       	ldd	r26, Z+63	; 0x3f
     66a:	a2 83       	std	Z+2, r26	; 0x02
     66c:	8f ef       	ldi	r24, 0xFF	; 255
     66e:	8a 0f       	add	r24, r26
     670:	82 30       	cpi	r24, 0x02	; 2
     672:	08 f0       	brcs	.+2      	; 0x676 <mount_volume+0x12e>
     674:	bc c1       	rjmp	.+888    	; 0x9ee <__stack+0xef>
     676:	b0 e0       	ldi	r27, 0x00	; 0
     678:	a5 01       	movw	r20, r10
     67a:	94 01       	movw	r18, r8
     67c:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__muluhisi3>
     680:	6d 83       	std	Y+5, r22	; 0x05
     682:	7e 83       	std	Y+6, r23	; 0x06
     684:	8f 83       	std	Y+7, r24	; 0x07
     686:	98 87       	std	Y+8, r25	; 0x08
     688:	04 ad       	ldd	r16, Z+60	; 0x3c
     68a:	10 e0       	ldi	r17, 0x00	; 0
     68c:	12 87       	std	Z+10, r17	; 0x0a
     68e:	01 87       	std	Z+9, r16	; 0x09
     690:	01 15       	cp	r16, r1
     692:	11 05       	cpc	r17, r1
     694:	09 f4       	brne	.+2      	; 0x698 <mount_volume+0x150>
     696:	ad c1       	rjmp	.+858    	; 0x9f2 <__stack+0xf3>
     698:	c8 01       	movw	r24, r16
     69a:	01 97       	sbiw	r24, 0x01	; 1
     69c:	80 23       	and	r24, r16
     69e:	91 23       	and	r25, r17
     6a0:	89 2b       	or	r24, r25
     6a2:	09 f0       	breq	.+2      	; 0x6a6 <mount_volume+0x15e>
     6a4:	a8 c1       	rjmp	.+848    	; 0x9f6 <__stack+0xf7>
     6a6:	cf 01       	movw	r24, r30
     6a8:	80 5c       	subi	r24, 0xC0	; 192
     6aa:	9f 4f       	sbci	r25, 0xFF	; 255
     6ac:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     6b0:	1c 01       	movw	r2, r24
     6b2:	ad 85       	ldd	r26, Y+13	; 0x0d
     6b4:	be 85       	ldd	r27, Y+14	; 0x0e
     6b6:	18 96       	adiw	r26, 0x08	; 8
     6b8:	9c 93       	st	X, r25
     6ba:	8e 93       	st	-X, r24
     6bc:	17 97       	sbiw	r26, 0x07	; 7
     6be:	8f 70       	andi	r24, 0x0F	; 15
     6c0:	99 27       	eor	r25, r25
     6c2:	89 2b       	or	r24, r25
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <mount_volume+0x180>
     6c6:	99 c1       	rjmp	.+818    	; 0x9fa <__stack+0xfb>
     6c8:	cd 01       	movw	r24, r26
     6ca:	8e 5b       	subi	r24, 0xBE	; 190
     6cc:	9f 4f       	sbci	r25, 0xFF	; 255
     6ce:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     6d2:	6c 01       	movw	r12, r24
     6d4:	e1 2c       	mov	r14, r1
     6d6:	f1 2c       	mov	r15, r1
     6d8:	c1 14       	cp	r12, r1
     6da:	d1 04       	cpc	r13, r1
     6dc:	e1 04       	cpc	r14, r1
     6de:	f1 04       	cpc	r15, r1
     6e0:	41 f4       	brne	.+16     	; 0x6f2 <mount_volume+0x1aa>
     6e2:	8d 85       	ldd	r24, Y+13	; 0x0d
     6e4:	9e 85       	ldd	r25, Y+14	; 0x0e
     6e6:	81 5b       	subi	r24, 0xB1	; 177
     6e8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ea:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     6ee:	6b 01       	movw	r12, r22
     6f0:	7c 01       	movw	r14, r24
     6f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     6f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f6:	cd 96       	adiw	r24, 0x3d	; 61
     6f8:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     6fc:	00 97       	sbiw	r24, 0x00	; 0
     6fe:	09 f4       	brne	.+2      	; 0x702 <mount_volume+0x1ba>
     700:	7e c1       	rjmp	.+764    	; 0x9fe <__stack+0xff>
     702:	9c 01       	movw	r18, r24
     704:	40 e0       	ldi	r20, 0x00	; 0
     706:	50 e0       	ldi	r21, 0x00	; 0
     708:	29 87       	std	Y+9, r18	; 0x09
     70a:	3a 87       	std	Y+10, r19	; 0x0a
     70c:	4b 87       	std	Y+11, r20	; 0x0b
     70e:	5c 87       	std	Y+12, r21	; 0x0c
     710:	8d 81       	ldd	r24, Y+5	; 0x05
     712:	9e 81       	ldd	r25, Y+6	; 0x06
     714:	af 81       	ldd	r26, Y+7	; 0x07
     716:	b8 85       	ldd	r27, Y+8	; 0x08
     718:	82 0f       	add	r24, r18
     71a:	93 1f       	adc	r25, r19
     71c:	a4 1f       	adc	r26, r20
     71e:	b5 1f       	adc	r27, r21
     720:	91 01       	movw	r18, r2
     722:	32 95       	swap	r19
     724:	22 95       	swap	r18
     726:	2f 70       	andi	r18, 0x0F	; 15
     728:	23 27       	eor	r18, r19
     72a:	3f 70       	andi	r19, 0x0F	; 15
     72c:	23 27       	eor	r18, r19
     72e:	ac 01       	movw	r20, r24
     730:	bd 01       	movw	r22, r26
     732:	42 0f       	add	r20, r18
     734:	53 1f       	adc	r21, r19
     736:	61 1d       	adc	r22, r1
     738:	71 1d       	adc	r23, r1
     73a:	49 83       	std	Y+1, r20	; 0x01
     73c:	5a 83       	std	Y+2, r21	; 0x02
     73e:	6b 83       	std	Y+3, r22	; 0x03
     740:	7c 83       	std	Y+4, r23	; 0x04
     742:	c4 16       	cp	r12, r20
     744:	d5 06       	cpc	r13, r21
     746:	e6 06       	cpc	r14, r22
     748:	f7 06       	cpc	r15, r23
     74a:	08 f4       	brcc	.+2      	; 0x74e <mount_volume+0x206>
     74c:	5a c1       	rjmp	.+692    	; 0xa02 <__stack+0x103>
     74e:	c7 01       	movw	r24, r14
     750:	b6 01       	movw	r22, r12
     752:	29 81       	ldd	r18, Y+1	; 0x01
     754:	3a 81       	ldd	r19, Y+2	; 0x02
     756:	4b 81       	ldd	r20, Y+3	; 0x03
     758:	5c 81       	ldd	r21, Y+4	; 0x04
     75a:	62 1b       	sub	r22, r18
     75c:	73 0b       	sbc	r23, r19
     75e:	84 0b       	sbc	r24, r20
     760:	95 0b       	sbc	r25, r21
     762:	98 01       	movw	r18, r16
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	50 e0       	ldi	r21, 0x00	; 0
     768:	0e 94 a3 08 	call	0x1146	; 0x1146 <__udivmodsi4>
     76c:	da 01       	movw	r26, r20
     76e:	c9 01       	movw	r24, r18
     770:	21 15       	cp	r18, r1
     772:	31 05       	cpc	r19, r1
     774:	41 05       	cpc	r20, r1
     776:	51 05       	cpc	r21, r1
     778:	09 f4       	brne	.+2      	; 0x77c <mount_volume+0x234>
     77a:	45 c1       	rjmp	.+650    	; 0xa06 <__stack+0x107>
     77c:	26 3f       	cpi	r18, 0xF6	; 246
     77e:	6f ef       	ldi	r22, 0xFF	; 255
     780:	36 07       	cpc	r19, r22
     782:	46 07       	cpc	r20, r22
     784:	6f e0       	ldi	r22, 0x0F	; 15
     786:	56 07       	cpc	r21, r22
     788:	18 f0       	brcs	.+6      	; 0x790 <mount_volume+0x248>
     78a:	00 e0       	ldi	r16, 0x00	; 0
     78c:	10 e0       	ldi	r17, 0x00	; 0
     78e:	02 c0       	rjmp	.+4      	; 0x794 <mount_volume+0x24c>
     790:	03 e0       	ldi	r16, 0x03	; 3
     792:	10 e0       	ldi	r17, 0x00	; 0
     794:	86 3f       	cpi	r24, 0xF6	; 246
     796:	7f ef       	ldi	r23, 0xFF	; 255
     798:	97 07       	cpc	r25, r23
     79a:	a1 05       	cpc	r26, r1
     79c:	b1 05       	cpc	r27, r1
     79e:	10 f4       	brcc	.+4      	; 0x7a4 <mount_volume+0x25c>
     7a0:	02 e0       	ldi	r16, 0x02	; 2
     7a2:	10 e0       	ldi	r17, 0x00	; 0
     7a4:	86 3f       	cpi	r24, 0xF6	; 246
     7a6:	9f 40       	sbci	r25, 0x0F	; 15
     7a8:	a1 05       	cpc	r26, r1
     7aa:	b1 05       	cpc	r27, r1
     7ac:	10 f4       	brcc	.+4      	; 0x7b2 <mount_volume+0x26a>
     7ae:	01 e0       	ldi	r16, 0x01	; 1
     7b0:	10 e0       	ldi	r17, 0x00	; 0
     7b2:	01 15       	cp	r16, r1
     7b4:	11 05       	cpc	r17, r1
     7b6:	09 f4       	brne	.+2      	; 0x7ba <mount_volume+0x272>
     7b8:	28 c1       	rjmp	.+592    	; 0xa0a <__stack+0x10b>
     7ba:	69 01       	movw	r12, r18
     7bc:	7a 01       	movw	r14, r20
     7be:	f2 e0       	ldi	r31, 0x02	; 2
     7c0:	cf 0e       	add	r12, r31
     7c2:	d1 1c       	adc	r13, r1
     7c4:	e1 1c       	adc	r14, r1
     7c6:	f1 1c       	adc	r15, r1
     7c8:	ad 85       	ldd	r26, Y+13	; 0x0d
     7ca:	be 85       	ldd	r27, Y+14	; 0x0e
     7cc:	53 96       	adiw	r26, 0x13	; 19
     7ce:	cd 92       	st	X+, r12
     7d0:	dd 92       	st	X+, r13
     7d2:	ed 92       	st	X+, r14
     7d4:	fc 92       	st	X, r15
     7d6:	56 97       	sbiw	r26, 0x16	; 22
     7d8:	fd 01       	movw	r30, r26
     7da:	43 8e       	std	Z+27, r4	; 0x1b
     7dc:	54 8e       	std	Z+28, r5	; 0x1c
     7de:	65 8e       	std	Z+29, r6	; 0x1d
     7e0:	76 8e       	std	Z+30, r7	; 0x1e
     7e2:	89 85       	ldd	r24, Y+9	; 0x09
     7e4:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e6:	ab 85       	ldd	r26, Y+11	; 0x0b
     7e8:	bc 85       	ldd	r27, Y+12	; 0x0c
     7ea:	84 0d       	add	r24, r4
     7ec:	95 1d       	adc	r25, r5
     7ee:	a6 1d       	adc	r26, r6
     7f0:	b7 1d       	adc	r27, r7
     7f2:	87 8f       	std	Z+31, r24	; 0x1f
     7f4:	90 a3       	std	Z+32, r25	; 0x20
     7f6:	a1 a3       	std	Z+33, r26	; 0x21
     7f8:	b2 a3       	std	Z+34, r27	; 0x22
     7fa:	49 81       	ldd	r20, Y+1	; 0x01
     7fc:	5a 81       	ldd	r21, Y+2	; 0x02
     7fe:	6b 81       	ldd	r22, Y+3	; 0x03
     800:	7c 81       	ldd	r23, Y+4	; 0x04
     802:	44 0d       	add	r20, r4
     804:	55 1d       	adc	r21, r5
     806:	66 1d       	adc	r22, r6
     808:	77 1d       	adc	r23, r7
     80a:	47 a3       	std	Z+39, r20	; 0x27
     80c:	50 a7       	std	Z+40, r21	; 0x28
     80e:	61 a7       	std	Z+41, r22	; 0x29
     810:	72 a7       	std	Z+42, r23	; 0x2a
     812:	03 30       	cpi	r16, 0x03	; 3
     814:	11 05       	cpc	r17, r1
     816:	11 f5       	brne	.+68     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     818:	cf 01       	movw	r24, r30
     81a:	87 5a       	subi	r24, 0xA7	; 167
     81c:	9f 4f       	sbci	r25, 0xFF	; 255
     81e:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     822:	89 2b       	or	r24, r25
     824:	09 f0       	breq	.+2      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     826:	f3 c0       	rjmp	.+486    	; 0xa0e <__stack+0x10f>
     828:	23 28       	or	r2, r3
     82a:	09 f0       	breq	.+2      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     82c:	f2 c0       	rjmp	.+484    	; 0xa12 <__stack+0x113>
     82e:	8d 85       	ldd	r24, Y+13	; 0x0d
     830:	9e 85       	ldd	r25, Y+14	; 0x0e
     832:	85 5a       	subi	r24, 0xA5	; 165
     834:	9f 4f       	sbci	r25, 0xFF	; 255
     836:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     83a:	ad 85       	ldd	r26, Y+13	; 0x0d
     83c:	be 85       	ldd	r27, Y+14	; 0x0e
     83e:	93 96       	adiw	r26, 0x23	; 35
     840:	6d 93       	st	X+, r22
     842:	7d 93       	st	X+, r23
     844:	8d 93       	st	X+, r24
     846:	9c 93       	st	X, r25
     848:	96 97       	sbiw	r26, 0x26	; 38
     84a:	cc 0c       	add	r12, r12
     84c:	dd 1c       	adc	r13, r13
     84e:	ee 1c       	adc	r14, r14
     850:	ff 1c       	adc	r15, r15
     852:	cc 0c       	add	r12, r12
     854:	dd 1c       	adc	r13, r13
     856:	ee 1c       	adc	r14, r14
     858:	ff 1c       	adc	r15, r15
     85a:	2e c0       	rjmp	.+92     	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
     85c:	23 28       	or	r2, r3
     85e:	09 f4       	brne	.+2      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     860:	da c0       	rjmp	.+436    	; 0xa16 <__stack+0x117>
     862:	2d 81       	ldd	r18, Y+5	; 0x05
     864:	3e 81       	ldd	r19, Y+6	; 0x06
     866:	4f 81       	ldd	r20, Y+7	; 0x07
     868:	58 85       	ldd	r21, Y+8	; 0x08
     86a:	82 0f       	add	r24, r18
     86c:	93 1f       	adc	r25, r19
     86e:	a4 1f       	adc	r26, r20
     870:	b5 1f       	adc	r27, r21
     872:	ed 85       	ldd	r30, Y+13	; 0x0d
     874:	fe 85       	ldd	r31, Y+14	; 0x0e
     876:	83 a3       	std	Z+35, r24	; 0x23
     878:	94 a3       	std	Z+36, r25	; 0x24
     87a:	a5 a3       	std	Z+37, r26	; 0x25
     87c:	b6 a3       	std	Z+38, r27	; 0x26
     87e:	02 30       	cpi	r16, 0x02	; 2
     880:	11 05       	cpc	r17, r1
     882:	29 f4       	brne	.+10     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
     884:	cc 0c       	add	r12, r12
     886:	dd 1c       	adc	r13, r13
     888:	ee 1c       	adc	r14, r14
     88a:	ff 1c       	adc	r15, r15
     88c:	15 c0       	rjmp	.+42     	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
     88e:	a3 e0       	ldi	r26, 0x03	; 3
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	a7 01       	movw	r20, r14
     894:	96 01       	movw	r18, r12
     896:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__muluhisi3>
     89a:	dc 01       	movw	r26, r24
     89c:	cb 01       	movw	r24, r22
     89e:	b6 95       	lsr	r27
     8a0:	a7 95       	ror	r26
     8a2:	97 95       	ror	r25
     8a4:	87 95       	ror	r24
     8a6:	f1 e0       	ldi	r31, 0x01	; 1
     8a8:	cf 22       	and	r12, r31
     8aa:	dd 24       	eor	r13, r13
     8ac:	ee 24       	eor	r14, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	c8 0e       	add	r12, r24
     8b2:	d9 1e       	adc	r13, r25
     8b4:	ea 1e       	adc	r14, r26
     8b6:	fb 1e       	adc	r15, r27
     8b8:	2f ef       	ldi	r18, 0xFF	; 255
     8ba:	c2 0e       	add	r12, r18
     8bc:	21 e0       	ldi	r18, 0x01	; 1
     8be:	d2 1e       	adc	r13, r18
     8c0:	e1 1c       	adc	r14, r1
     8c2:	f1 1c       	adc	r15, r1
     8c4:	0b 2e       	mov	r0, r27
     8c6:	b9 e0       	ldi	r27, 0x09	; 9
     8c8:	f6 94       	lsr	r15
     8ca:	e7 94       	ror	r14
     8cc:	d7 94       	ror	r13
     8ce:	c7 94       	ror	r12
     8d0:	ba 95       	dec	r27
     8d2:	d1 f7       	brne	.-12     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
     8d4:	b0 2d       	mov	r27, r0
     8d6:	8c 14       	cp	r8, r12
     8d8:	9d 04       	cpc	r9, r13
     8da:	ae 04       	cpc	r10, r14
     8dc:	bf 04       	cpc	r11, r15
     8de:	08 f4       	brcc	.+2      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
     8e0:	9c c0       	rjmp	.+312    	; 0xa1a <__stack+0x11b>
     8e2:	8f ef       	ldi	r24, 0xFF	; 255
     8e4:	9f ef       	ldi	r25, 0xFF	; 255
     8e6:	dc 01       	movw	r26, r24
     8e8:	ed 85       	ldd	r30, Y+13	; 0x0d
     8ea:	fe 85       	ldd	r31, Y+14	; 0x0e
     8ec:	87 87       	std	Z+15, r24	; 0x0f
     8ee:	90 8b       	std	Z+16, r25	; 0x10
     8f0:	a1 8b       	std	Z+17, r26	; 0x11
     8f2:	b2 8b       	std	Z+18, r27	; 0x12
     8f4:	83 87       	std	Z+11, r24	; 0x0b
     8f6:	94 87       	std	Z+12, r25	; 0x0c
     8f8:	a5 87       	std	Z+13, r26	; 0x0d
     8fa:	b6 87       	std	Z+14, r27	; 0x0e
     8fc:	80 e8       	ldi	r24, 0x80	; 128
     8fe:	84 83       	std	Z+4, r24	; 0x04
     900:	03 30       	cpi	r16, 0x03	; 3
     902:	11 05       	cpc	r17, r1
     904:	09 f0       	breq	.+2      	; 0x908 <__stack+0x9>
     906:	4f c0       	rjmp	.+158    	; 0x9a6 <__stack+0xa7>
     908:	cf 01       	movw	r24, r30
     90a:	81 5a       	subi	r24, 0xA1	; 161
     90c:	9f 4f       	sbci	r25, 0xFF	; 255
     90e:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     912:	01 97       	sbiw	r24, 0x01	; 1
     914:	09 f0       	breq	.+2      	; 0x918 <__stack+0x19>
     916:	47 c0       	rjmp	.+142    	; 0x9a6 <__stack+0xa7>
     918:	b3 01       	movw	r22, r6
     91a:	a2 01       	movw	r20, r4
     91c:	4f 5f       	subi	r20, 0xFF	; 255
     91e:	5f 4f       	sbci	r21, 0xFF	; 255
     920:	6f 4f       	sbci	r22, 0xFF	; 255
     922:	7f 4f       	sbci	r23, 0xFF	; 255
     924:	8d 85       	ldd	r24, Y+13	; 0x0d
     926:	9e 85       	ldd	r25, Y+14	; 0x0e
     928:	0e 94 45 01 	call	0x28a	; 0x28a <move_window>
     92c:	81 11       	cpse	r24, r1
     92e:	3b c0       	rjmp	.+118    	; 0x9a6 <__stack+0xa7>
     930:	ad 85       	ldd	r26, Y+13	; 0x0d
     932:	be 85       	ldd	r27, Y+14	; 0x0e
     934:	14 96       	adiw	r26, 0x04	; 4
     936:	1c 92       	st	X, r1
     938:	14 97       	sbiw	r26, 0x04	; 4
     93a:	cd 01       	movw	r24, r26
     93c:	83 5d       	subi	r24, 0xD3	; 211
     93e:	9d 4f       	sbci	r25, 0xFD	; 253
     940:	0e 94 8e 00 	call	0x11c	; 0x11c <ld_word>
     944:	85 35       	cpi	r24, 0x55	; 85
     946:	9a 4a       	sbci	r25, 0xAA	; 170
     948:	71 f5       	brne	.+92     	; 0x9a6 <__stack+0xa7>
     94a:	8d 85       	ldd	r24, Y+13	; 0x0d
     94c:	9e 85       	ldd	r25, Y+14	; 0x0e
     94e:	8f 96       	adiw	r24, 0x2f	; 47
     950:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     954:	62 35       	cpi	r22, 0x52	; 82
     956:	72 45       	sbci	r23, 0x52	; 82
     958:	81 46       	sbci	r24, 0x61	; 97
     95a:	91 44       	sbci	r25, 0x41	; 65
     95c:	21 f5       	brne	.+72     	; 0x9a6 <__stack+0xa7>
     95e:	8d 85       	ldd	r24, Y+13	; 0x0d
     960:	9e 85       	ldd	r25, Y+14	; 0x0e
     962:	8d 5e       	subi	r24, 0xED	; 237
     964:	9d 4f       	sbci	r25, 0xFD	; 253
     966:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     96a:	62 37       	cpi	r22, 0x72	; 114
     96c:	72 47       	sbci	r23, 0x72	; 114
     96e:	81 44       	sbci	r24, 0x41	; 65
     970:	91 46       	sbci	r25, 0x61	; 97
     972:	c9 f4       	brne	.+50     	; 0x9a6 <__stack+0xa7>
     974:	8d 85       	ldd	r24, Y+13	; 0x0d
     976:	9e 85       	ldd	r25, Y+14	; 0x0e
     978:	89 5e       	subi	r24, 0xE9	; 233
     97a:	9d 4f       	sbci	r25, 0xFD	; 253
     97c:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     980:	ad 85       	ldd	r26, Y+13	; 0x0d
     982:	be 85       	ldd	r27, Y+14	; 0x0e
     984:	1f 96       	adiw	r26, 0x0f	; 15
     986:	6d 93       	st	X+, r22
     988:	7d 93       	st	X+, r23
     98a:	8d 93       	st	X+, r24
     98c:	9c 93       	st	X, r25
     98e:	52 97       	sbiw	r26, 0x12	; 18
     990:	cd 01       	movw	r24, r26
     992:	85 5e       	subi	r24, 0xE5	; 229
     994:	9d 4f       	sbci	r25, 0xFD	; 253
     996:	0e 94 98 00 	call	0x130	; 0x130 <ld_dword>
     99a:	ed 85       	ldd	r30, Y+13	; 0x0d
     99c:	fe 85       	ldd	r31, Y+14	; 0x0e
     99e:	63 87       	std	Z+11, r22	; 0x0b
     9a0:	74 87       	std	Z+12, r23	; 0x0c
     9a2:	85 87       	std	Z+13, r24	; 0x0d
     9a4:	96 87       	std	Z+14, r25	; 0x0e
     9a6:	ad 85       	ldd	r26, Y+13	; 0x0d
     9a8:	be 85       	ldd	r27, Y+14	; 0x0e
     9aa:	0c 93       	st	X, r16
     9ac:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     9b0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     9b4:	01 96       	adiw	r24, 0x01	; 1
     9b6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     9ba:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
     9be:	16 96       	adiw	r26, 0x06	; 6
     9c0:	9c 93       	st	X, r25
     9c2:	8e 93       	st	-X, r24
     9c4:	15 97       	sbiw	r26, 0x05	; 5
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	29 c0       	rjmp	.+82     	; 0xa1c <__stack+0x11d>
     9ca:	8b e0       	ldi	r24, 0x0B	; 11
     9cc:	27 c0       	rjmp	.+78     	; 0xa1c <__stack+0x11d>
     9ce:	8c e0       	ldi	r24, 0x0C	; 12
     9d0:	25 c0       	rjmp	.+74     	; 0xa1c <__stack+0x11d>
     9d2:	80 e0       	ldi	r24, 0x00	; 0
     9d4:	23 c0       	rjmp	.+70     	; 0xa1c <__stack+0x11d>
     9d6:	8a e0       	ldi	r24, 0x0A	; 10
     9d8:	21 c0       	rjmp	.+66     	; 0xa1c <__stack+0x11d>
     9da:	83 e0       	ldi	r24, 0x03	; 3
     9dc:	1f c0       	rjmp	.+62     	; 0xa1c <__stack+0x11d>
     9de:	8a e0       	ldi	r24, 0x0A	; 10
     9e0:	1d c0       	rjmp	.+58     	; 0xa1c <__stack+0x11d>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	1b c0       	rjmp	.+54     	; 0xa1c <__stack+0x11d>
     9e6:	8d e0       	ldi	r24, 0x0D	; 13
     9e8:	19 c0       	rjmp	.+50     	; 0xa1c <__stack+0x11d>
     9ea:	89 e1       	ldi	r24, 0x19	; 25
     9ec:	17 c0       	rjmp	.+46     	; 0xa1c <__stack+0x11d>
     9ee:	8a e1       	ldi	r24, 0x1A	; 26
     9f0:	15 c0       	rjmp	.+42     	; 0xa1c <__stack+0x11d>
     9f2:	8b e1       	ldi	r24, 0x1B	; 27
     9f4:	13 c0       	rjmp	.+38     	; 0xa1c <__stack+0x11d>
     9f6:	8b e1       	ldi	r24, 0x1B	; 27
     9f8:	11 c0       	rjmp	.+34     	; 0xa1c <__stack+0x11d>
     9fa:	8c e1       	ldi	r24, 0x1C	; 28
     9fc:	0f c0       	rjmp	.+30     	; 0xa1c <__stack+0x11d>
     9fe:	8d e1       	ldi	r24, 0x1D	; 29
     a00:	0d c0       	rjmp	.+26     	; 0xa1c <__stack+0x11d>
     a02:	8e e1       	ldi	r24, 0x1E	; 30
     a04:	0b c0       	rjmp	.+22     	; 0xa1c <__stack+0x11d>
     a06:	8f e1       	ldi	r24, 0x1F	; 31
     a08:	09 c0       	rjmp	.+18     	; 0xa1c <__stack+0x11d>
     a0a:	80 e2       	ldi	r24, 0x20	; 32
     a0c:	07 c0       	rjmp	.+14     	; 0xa1c <__stack+0x11d>
     a0e:	81 e2       	ldi	r24, 0x21	; 33
     a10:	05 c0       	rjmp	.+10     	; 0xa1c <__stack+0x11d>
     a12:	82 e2       	ldi	r24, 0x22	; 34
     a14:	03 c0       	rjmp	.+6      	; 0xa1c <__stack+0x11d>
     a16:	83 e2       	ldi	r24, 0x23	; 35
     a18:	01 c0       	rjmp	.+2      	; 0xa1c <__stack+0x11d>
     a1a:	84 e2       	ldi	r24, 0x24	; 36
     a1c:	2e 96       	adiw	r28, 0x0e	; 14
     a1e:	0f b6       	in	r0, 0x3f	; 63
     a20:	f8 94       	cli
     a22:	de bf       	out	0x3e, r29	; 62
     a24:	0f be       	out	0x3f, r0	; 63
     a26:	cd bf       	out	0x3d, r28	; 61
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	ff 90       	pop	r15
     a32:	ef 90       	pop	r14
     a34:	df 90       	pop	r13
     a36:	cf 90       	pop	r12
     a38:	bf 90       	pop	r11
     a3a:	af 90       	pop	r10
     a3c:	9f 90       	pop	r9
     a3e:	8f 90       	pop	r8
     a40:	7f 90       	pop	r7
     a42:	6f 90       	pop	r6
     a44:	5f 90       	pop	r5
     a46:	4f 90       	pop	r4
     a48:	3f 90       	pop	r3
     a4a:	2f 90       	pop	r2
     a4c:	08 95       	ret

00000a4e <f_mount>:
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object to be registered (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mount option: 0=Do not mount (delayed mount), 1=Mount immediately */
)
{
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	00 d0       	rcall	.+0      	; 0xa56 <f_mount+0x8>
     a56:	00 d0       	rcall	.+0      	; 0xa58 <f_mount+0xa>
     a58:	00 d0       	rcall	.+0      	; 0xa5a <f_mount+0xc>
     a5a:	cd b7       	in	r28, 0x3d	; 61
     a5c:	de b7       	in	r29, 0x3e	; 62
     a5e:	9c 83       	std	Y+4, r25	; 0x04
     a60:	8b 83       	std	Y+3, r24	; 0x03
     a62:	7e 83       	std	Y+6, r23	; 0x06
     a64:	6d 83       	std	Y+5, r22	; 0x05
     a66:	14 2f       	mov	r17, r20
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
     a68:	7a 83       	std	Y+2, r23	; 0x02
     a6a:	69 83       	std	Y+1, r22	; 0x01

	/* Get logical drive number */
	vol = get_ldnumber(&rp);
     a6c:	ce 01       	movw	r24, r28
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	0e 94 b3 00 	call	0x166	; 0x166 <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
     a74:	99 23       	and	r25, r25
     a76:	24 f1       	brlt	.+72     	; 0xac0 <f_mount+0x72>
	cfs = FatFs[vol];					/* Pointer to fs object */
     a78:	fc 01       	movw	r30, r24
     a7a:	ee 0f       	add	r30, r30
     a7c:	ff 1f       	adc	r31, r31
     a7e:	e4 5e       	subi	r30, 0xE4	; 228
     a80:	fe 4f       	sbci	r31, 0xFE	; 254
     a82:	01 90       	ld	r0, Z+
     a84:	f0 81       	ld	r31, Z
     a86:	e0 2d       	mov	r30, r0

	if (cfs) {
     a88:	30 97       	sbiw	r30, 0x00	; 0
     a8a:	09 f0       	breq	.+2      	; 0xa8e <f_mount+0x40>
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
#endif
		cfs->fs_type = 0;				/* Clear old fs object */
     a8c:	10 82       	st	Z, r1
	}

	if (fs) {
     a8e:	eb 81       	ldd	r30, Y+3	; 0x03
     a90:	fc 81       	ldd	r31, Y+4	; 0x04
     a92:	30 97       	sbiw	r30, 0x00	; 0
     a94:	09 f0       	breq	.+2      	; 0xa98 <f_mount+0x4a>
		fs->fs_type = 0;				/* Clear new fs object */
     a96:	10 82       	st	Z, r1
#if FF_FS_REENTRANT						/* Create sync object for the new volume */
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
#endif
	}
	FatFs[vol] = fs;					/* Register new fs object */
     a98:	88 0f       	add	r24, r24
     a9a:	99 1f       	adc	r25, r25
     a9c:	fc 01       	movw	r30, r24
     a9e:	e4 5e       	subi	r30, 0xE4	; 228
     aa0:	fe 4f       	sbci	r31, 0xFE	; 254
     aa2:	8b 81       	ldd	r24, Y+3	; 0x03
     aa4:	9c 81       	ldd	r25, Y+4	; 0x04
     aa6:	91 83       	std	Z+1, r25	; 0x01
     aa8:	80 83       	st	Z, r24

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
     aaa:	11 23       	and	r17, r17
     aac:	59 f0       	breq	.+22     	; 0xac4 <f_mount+0x76>

	res = mount_volume(&path, &fs, 0);	/* Force mounted the volume */
     aae:	40 e0       	ldi	r20, 0x00	; 0
     ab0:	be 01       	movw	r22, r28
     ab2:	6d 5f       	subi	r22, 0xFD	; 253
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	ce 01       	movw	r24, r28
     ab8:	05 96       	adiw	r24, 0x05	; 5
     aba:	0e 94 a4 02 	call	0x548	; 0x548 <mount_volume>

	LEAVE_FF(fs, res);
     abe:	03 c0       	rjmp	.+6      	; 0xac6 <f_mount+0x78>
	FRESULT res;
	const TCHAR *rp = path;

	/* Get logical drive number */
	vol = get_ldnumber(&rp);
	if (vol < 0) return FR_INVALID_DRIVE;
     ac0:	8b e0       	ldi	r24, 0x0B	; 11
     ac2:	01 c0       	rjmp	.+2      	; 0xac6 <f_mount+0x78>
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
#endif
	}
	FatFs[vol] = fs;					/* Register new fs object */

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
     ac4:	80 e0       	ldi	r24, 0x00	; 0

	res = mount_volume(&path, &fs, 0);	/* Force mounted the volume */

	LEAVE_FF(fs, res);
}
     ac6:	26 96       	adiw	r28, 0x06	; 6
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	f8 94       	cli
     acc:	de bf       	out	0x3e, r29	; 62
     ace:	0f be       	out	0x3f, r0	; 63
     ad0:	cd bf       	out	0x3d, r28	; 61
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	1f 91       	pop	r17
     ad8:	08 95       	ret

00000ada <__vector_15>:
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     ada:	1f 92       	push	r1
     adc:	0f 92       	push	r0
     ade:	0f b6       	in	r0, 0x3f	; 63
     ae0:	0f 92       	push	r0
     ae2:	11 24       	eor	r1, r1
     ae4:	2f 93       	push	r18
     ae6:	3f 93       	push	r19
     ae8:	4f 93       	push	r20
     aea:	5f 93       	push	r21
     aec:	6f 93       	push	r22
     aee:	7f 93       	push	r23
     af0:	8f 93       	push	r24
     af2:	9f 93       	push	r25
     af4:	af 93       	push	r26
     af6:	bf 93       	push	r27
     af8:	ef 93       	push	r30
     afa:	ff 93       	push	r31
     afc:	81 e6       	ldi	r24, 0x61	; 97
     afe:	9f ef       	ldi	r25, 0xFF	; 255
     b00:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     b04:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
     b08:	0e 94 8b 00 	call	0x116	; 0x116 <disk_timerproc>
     b0c:	ff 91       	pop	r31
     b0e:	ef 91       	pop	r30
     b10:	bf 91       	pop	r27
     b12:	af 91       	pop	r26
     b14:	9f 91       	pop	r25
     b16:	8f 91       	pop	r24
     b18:	7f 91       	pop	r23
     b1a:	6f 91       	pop	r22
     b1c:	5f 91       	pop	r21
     b1e:	4f 91       	pop	r20
     b20:	3f 91       	pop	r19
     b22:	2f 91       	pop	r18
     b24:	0f 90       	pop	r0
     b26:	0f be       	out	0x3f, r0	; 63
     b28:	0f 90       	pop	r0
     b2a:	1f 90       	pop	r1
     b2c:	18 95       	reti

00000b2e <init_timer>:
	}
	
}

void init_timer(void) {	
	CLKPR = 0x80; CLKPR = 0x00; // reset prescaler
     b2e:	e1 e6       	ldi	r30, 0x61	; 97
     b30:	f0 e0       	ldi	r31, 0x00	; 0
     b32:	80 e8       	ldi	r24, 0x80	; 128
     b34:	80 83       	st	Z, r24
     b36:	10 82       	st	Z, r1
	TCNT1 = 0xFF61; // start counting at (2^16 - 159 = 65377 = 0xFF61)
     b38:	81 e6       	ldi	r24, 0x61	; 97
     b3a:	9f ef       	ldi	r25, 0xFF	; 255
     b3c:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     b40:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCCR1A = 0x00;
     b44:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (( 1 << CS12) | ( 1 << CS10)); // prescaler op 1024
     b48:	85 e0       	ldi	r24, 0x05	; 5
     b4a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 = (1 << TOIE1) ;		// Enable timer 1 overflow interrupt(TOIE2), pag. 142 datasheet
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	sei();					// Enable global interrupts by setting global interrupt enable bit in SRE
     b54:	78 94       	sei
     b56:	08 95       	ret

00000b58 <main>:
		_delay_ms(delay_ms);
	}
}

int main(void)
{
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	cd b7       	in	r28, 0x3d	; 61
     b5e:	de b7       	in	r29, 0x3e	; 62
     b60:	cf 52       	subi	r28, 0x2F	; 47
     b62:	d2 40       	sbci	r29, 0x02	; 2
     b64:	0f b6       	in	r0, 0x3f	; 63
     b66:	f8 94       	cli
     b68:	de bf       	out	0x3e, r29	; 62
     b6a:	0f be       	out	0x3f, r0	; 63
     b6c:	cd bf       	out	0x3d, r28	; 61
	init_timer();  
     b6e:	0e 94 97 05 	call	0xb2e	; 0xb2e <init_timer>
	
	FATFS FatFs;

	// init sdcard
	UINT bw;
	FRESULT res = f_mount(&FatFs, "", 1);		// Give a work area to the FatFs module
     b72:	41 e0       	ldi	r20, 0x01	; 1
     b74:	69 e0       	ldi	r22, 0x09	; 9
     b76:	71 e0       	ldi	r23, 0x01	; 1
     b78:	ce 01       	movw	r24, r28
     b7a:	01 96       	adiw	r24, 0x01	; 1
     b7c:	0e 94 27 05 	call	0xa4e	; 0xa4e <f_mount>
     b80:	ff cf       	rjmp	.-2      	; 0xb80 <main+0x28>

00000b82 <xchg_spi>:
	default:
		res = RES_PARERR;
	}

	return res;
}
     b82:	95 b1       	in	r25, 0x05	; 5
     b84:	9e 7f       	andi	r25, 0xFE	; 254
     b86:	95 b9       	out	0x05, r25	; 5
     b88:	8e bd       	out	0x2e, r24	; 46
     b8a:	0d b4       	in	r0, 0x2d	; 45
     b8c:	07 fe       	sbrs	r0, 7
     b8e:	fd cf       	rjmp	.-6      	; 0xb8a <xchg_spi+0x8>
     b90:	85 b1       	in	r24, 0x05	; 5
     b92:	81 60       	ori	r24, 0x01	; 1
     b94:	85 b9       	out	0x05, r24	; 5
     b96:	8e b5       	in	r24, 0x2e	; 46
     b98:	08 95       	ret

00000b9a <rcvr_spi_multi>:
     b9a:	fc 01       	movw	r30, r24
     b9c:	01 c0       	rjmp	.+2      	; 0xba0 <rcvr_spi_multi+0x6>
     b9e:	f9 01       	movw	r30, r18
     ba0:	8f ef       	ldi	r24, 0xFF	; 255
     ba2:	8e bd       	out	0x2e, r24	; 46
     ba4:	0d b4       	in	r0, 0x2d	; 45
     ba6:	07 fe       	sbrs	r0, 7
     ba8:	fd cf       	rjmp	.-6      	; 0xba4 <rcvr_spi_multi+0xa>
     baa:	8e b5       	in	r24, 0x2e	; 46
     bac:	80 83       	st	Z, r24
     bae:	8f ef       	ldi	r24, 0xFF	; 255
     bb0:	8e bd       	out	0x2e, r24	; 46
     bb2:	0d b4       	in	r0, 0x2d	; 45
     bb4:	07 fe       	sbrs	r0, 7
     bb6:	fd cf       	rjmp	.-6      	; 0xbb2 <rcvr_spi_multi+0x18>
     bb8:	9f 01       	movw	r18, r30
     bba:	2e 5f       	subi	r18, 0xFE	; 254
     bbc:	3f 4f       	sbci	r19, 0xFF	; 255
     bbe:	8e b5       	in	r24, 0x2e	; 46
     bc0:	81 83       	std	Z+1, r24	; 0x01
     bc2:	62 50       	subi	r22, 0x02	; 2
     bc4:	71 09       	sbc	r23, r1
     bc6:	59 f7       	brne	.-42     	; 0xb9e <rcvr_spi_multi+0x4>
     bc8:	08 95       	ret

00000bca <xmit_spi_multi>:
     bca:	fc 01       	movw	r30, r24
     bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <xmit_spi_multi+0x6>
     bce:	f9 01       	movw	r30, r18
     bd0:	80 81       	ld	r24, Z
     bd2:	8e bd       	out	0x2e, r24	; 46
     bd4:	0d b4       	in	r0, 0x2d	; 45
     bd6:	07 fe       	sbrs	r0, 7
     bd8:	fd cf       	rjmp	.-6      	; 0xbd4 <xmit_spi_multi+0xa>
     bda:	9f 01       	movw	r18, r30
     bdc:	2e 5f       	subi	r18, 0xFE	; 254
     bde:	3f 4f       	sbci	r19, 0xFF	; 255
     be0:	81 81       	ldd	r24, Z+1	; 0x01
     be2:	8e bd       	out	0x2e, r24	; 46
     be4:	0d b4       	in	r0, 0x2d	; 45
     be6:	07 fe       	sbrs	r0, 7
     be8:	fd cf       	rjmp	.-6      	; 0xbe4 <xmit_spi_multi+0x1a>
     bea:	62 50       	subi	r22, 0x02	; 2
     bec:	71 09       	sbc	r23, r1
     bee:	79 f7       	brne	.-34     	; 0xbce <xmit_spi_multi+0x4>
     bf0:	08 95       	ret

00000bf2 <wait_ready>:
     bf2:	9c 01       	movw	r18, r24
     bf4:	ad ec       	ldi	r26, 0xCD	; 205
     bf6:	bc ec       	ldi	r27, 0xCC	; 204
     bf8:	0e 94 c5 08 	call	0x118a	; 0x118a <__umulhisi3>
     bfc:	96 95       	lsr	r25
     bfe:	87 95       	ror	r24
     c00:	96 95       	lsr	r25
     c02:	87 95       	ror	r24
     c04:	96 95       	lsr	r25
     c06:	87 95       	ror	r24
     c08:	f8 94       	cli
     c0a:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <Timer2+0x1>
     c0e:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <Timer2>
     c12:	78 94       	sei
     c14:	8f ef       	ldi	r24, 0xFF	; 255
     c16:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     c1a:	f8 94       	cli
     c1c:	20 91 1f 01 	lds	r18, 0x011F	; 0x80011f <Timer2>
     c20:	30 91 20 01 	lds	r19, 0x0120	; 0x800120 <Timer2+0x1>
     c24:	78 94       	sei
     c26:	8f 3f       	cpi	r24, 0xFF	; 255
     c28:	11 f0       	breq	.+4      	; 0xc2e <wait_ready+0x3c>
     c2a:	23 2b       	or	r18, r19
     c2c:	99 f7       	brne	.-26     	; 0xc14 <wait_ready+0x22>
     c2e:	91 e0       	ldi	r25, 0x01	; 1
     c30:	8f 3f       	cpi	r24, 0xFF	; 255
     c32:	09 f0       	breq	.+2      	; 0xc36 <wait_ready+0x44>
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	89 2f       	mov	r24, r25
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	08 95       	ret

00000c3c <deselect>:
     c3c:	85 b1       	in	r24, 0x05	; 5
     c3e:	81 60       	ori	r24, 0x01	; 1
     c40:	85 b9       	out	0x05, r24	; 5
     c42:	8f ef       	ldi	r24, 0xFF	; 255
     c44:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     c48:	08 95       	ret

00000c4a <select>:
     c4a:	cf 93       	push	r28
     c4c:	df 93       	push	r29
     c4e:	85 b1       	in	r24, 0x05	; 5
     c50:	8e 7f       	andi	r24, 0xFE	; 254
     c52:	85 b9       	out	0x05, r24	; 5
     c54:	8f ef       	ldi	r24, 0xFF	; 255
     c56:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     c5a:	84 ef       	ldi	r24, 0xF4	; 244
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <wait_ready>
     c62:	ec 01       	movw	r28, r24
     c64:	89 2b       	or	r24, r25
     c66:	19 f4       	brne	.+6      	; 0xc6e <select+0x24>
     c68:	0e 94 1e 06 	call	0xc3c	; 0xc3c <deselect>
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <select+0x28>
     c6e:	c1 e0       	ldi	r28, 0x01	; 1
     c70:	d0 e0       	ldi	r29, 0x00	; 0
     c72:	ce 01       	movw	r24, r28
     c74:	df 91       	pop	r29
     c76:	cf 91       	pop	r28
     c78:	08 95       	ret

00000c7a <rcvr_datablock>:
     c7a:	0f 93       	push	r16
     c7c:	1f 93       	push	r17
     c7e:	cf 93       	push	r28
     c80:	df 93       	push	r29
     c82:	ec 01       	movw	r28, r24
     c84:	8b 01       	movw	r16, r22
     c86:	84 e1       	ldi	r24, 0x14	; 20
     c88:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <Timer1>
     c8c:	8f ef       	ldi	r24, 0xFF	; 255
     c8e:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     c92:	8f 3f       	cpi	r24, 0xFF	; 255
     c94:	21 f4       	brne	.+8      	; 0xc9e <rcvr_datablock+0x24>
     c96:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Timer1>
     c9a:	91 11       	cpse	r25, r1
     c9c:	f7 cf       	rjmp	.-18     	; 0xc8c <rcvr_datablock+0x12>
     c9e:	8e 3f       	cpi	r24, 0xFE	; 254
     ca0:	69 f4       	brne	.+26     	; 0xcbc <rcvr_datablock+0x42>
     ca2:	b8 01       	movw	r22, r16
     ca4:	ce 01       	movw	r24, r28
     ca6:	0e 94 cd 05 	call	0xb9a	; 0xb9a <rcvr_spi_multi>
     caa:	8f ef       	ldi	r24, 0xFF	; 255
     cac:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     cb0:	8f ef       	ldi	r24, 0xFF	; 255
     cb2:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <rcvr_datablock+0x46>
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	df 91       	pop	r29
     cc2:	cf 91       	pop	r28
     cc4:	1f 91       	pop	r17
     cc6:	0f 91       	pop	r16
     cc8:	08 95       	ret

00000cca <xmit_datablock>:
     cca:	0f 93       	push	r16
     ccc:	1f 93       	push	r17
     cce:	cf 93       	push	r28
     cd0:	8c 01       	movw	r16, r24
     cd2:	c6 2f       	mov	r28, r22
     cd4:	84 ef       	ldi	r24, 0xF4	; 244
     cd6:	91 e0       	ldi	r25, 0x01	; 1
     cd8:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <wait_ready>
     cdc:	00 97       	sbiw	r24, 0x00	; 0
     cde:	e9 f0       	breq	.+58     	; 0xd1a <xmit_datablock+0x50>
     ce0:	8c 2f       	mov	r24, r28
     ce2:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     ce6:	cd 3f       	cpi	r28, 0xFD	; 253
     ce8:	b1 f0       	breq	.+44     	; 0xd16 <xmit_datablock+0x4c>
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	72 e0       	ldi	r23, 0x02	; 2
     cee:	c8 01       	movw	r24, r16
     cf0:	0e 94 e5 05 	call	0xbca	; 0xbca <xmit_spi_multi>
     cf4:	8f ef       	ldi	r24, 0xFF	; 255
     cf6:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     cfa:	8f ef       	ldi	r24, 0xFF	; 255
     cfc:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d00:	8f ef       	ldi	r24, 0xFF	; 255
     d02:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d06:	8f 71       	andi	r24, 0x1F	; 31
     d08:	91 e0       	ldi	r25, 0x01	; 1
     d0a:	85 30       	cpi	r24, 0x05	; 5
     d0c:	09 f0       	breq	.+2      	; 0xd10 <xmit_datablock+0x46>
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	89 2f       	mov	r24, r25
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <xmit_datablock+0x50>
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	cf 91       	pop	r28
     d1c:	1f 91       	pop	r17
     d1e:	0f 91       	pop	r16
     d20:	08 95       	ret

00000d22 <send_cmd>:
     d22:	ff 92       	push	r15
     d24:	0f 93       	push	r16
     d26:	1f 93       	push	r17
     d28:	cf 93       	push	r28
     d2a:	df 93       	push	r29
     d2c:	c8 2f       	mov	r28, r24
     d2e:	d4 2f       	mov	r29, r20
     d30:	15 2f       	mov	r17, r21
     d32:	06 2f       	mov	r16, r22
     d34:	f7 2e       	mov	r15, r23
     d36:	88 23       	and	r24, r24
     d38:	4c f4       	brge	.+18     	; 0xd4c <send_cmd+0x2a>
     d3a:	cf 77       	andi	r28, 0x7F	; 127
     d3c:	40 e0       	ldi	r20, 0x00	; 0
     d3e:	50 e0       	ldi	r21, 0x00	; 0
     d40:	ba 01       	movw	r22, r20
     d42:	87 e3       	ldi	r24, 0x37	; 55
     d44:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     d48:	82 30       	cpi	r24, 0x02	; 2
     d4a:	88 f5       	brcc	.+98     	; 0xdae <send_cmd+0x8c>
     d4c:	cc 30       	cpi	r28, 0x0C	; 12
     d4e:	31 f0       	breq	.+12     	; 0xd5c <send_cmd+0x3a>
     d50:	0e 94 1e 06 	call	0xc3c	; 0xc3c <deselect>
     d54:	0e 94 25 06 	call	0xc4a	; 0xc4a <select>
     d58:	89 2b       	or	r24, r25
     d5a:	41 f1       	breq	.+80     	; 0xdac <send_cmd+0x8a>
     d5c:	8c 2f       	mov	r24, r28
     d5e:	80 64       	ori	r24, 0x40	; 64
     d60:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d64:	8f 2d       	mov	r24, r15
     d66:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d6a:	80 2f       	mov	r24, r16
     d6c:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d70:	81 2f       	mov	r24, r17
     d72:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d76:	8d 2f       	mov	r24, r29
     d78:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d7c:	cc 23       	and	r28, r28
     d7e:	11 f0       	breq	.+4      	; 0xd84 <send_cmd+0x62>
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	01 c0       	rjmp	.+2      	; 0xd86 <send_cmd+0x64>
     d84:	85 e9       	ldi	r24, 0x95	; 149
     d86:	c8 30       	cpi	r28, 0x08	; 8
     d88:	09 f4       	brne	.+2      	; 0xd8c <send_cmd+0x6a>
     d8a:	87 e8       	ldi	r24, 0x87	; 135
     d8c:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d90:	cc 30       	cpi	r28, 0x0C	; 12
     d92:	19 f4       	brne	.+6      	; 0xd9a <send_cmd+0x78>
     d94:	8f ef       	ldi	r24, 0xFF	; 255
     d96:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     d9a:	ca e0       	ldi	r28, 0x0A	; 10
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     da2:	88 23       	and	r24, r24
     da4:	24 f4       	brge	.+8      	; 0xdae <send_cmd+0x8c>
     da6:	c1 50       	subi	r28, 0x01	; 1
     da8:	c9 f7       	brne	.-14     	; 0xd9c <send_cmd+0x7a>
     daa:	01 c0       	rjmp	.+2      	; 0xdae <send_cmd+0x8c>
     dac:	8f ef       	ldi	r24, 0xFF	; 255
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	ff 90       	pop	r15
     db8:	08 95       	ret

00000dba <power_on>:
     dba:	8f e9       	ldi	r24, 0x9F	; 159
     dbc:	9f e0       	ldi	r25, 0x0F	; 15
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	f1 f7       	brne	.-4      	; 0xdbe <power_on+0x4>
     dc2:	00 c0       	rjmp	.+0      	; 0xdc4 <power_on+0xa>
     dc4:	00 00       	nop
     dc6:	84 b1       	in	r24, 0x04	; 4
     dc8:	87 60       	ori	r24, 0x07	; 7
     dca:	84 b9       	out	0x04, r24	; 4
     dcc:	85 b1       	in	r24, 0x05	; 5
     dce:	88 60       	ori	r24, 0x08	; 8
     dd0:	85 b9       	out	0x05, r24	; 5
     dd2:	85 b1       	in	r24, 0x05	; 5
     dd4:	81 60       	ori	r24, 0x01	; 1
     dd6:	85 b9       	out	0x05, r24	; 5
     dd8:	8c b5       	in	r24, 0x2c	; 44
     dda:	80 65       	ori	r24, 0x50	; 80
     ddc:	8c bd       	out	0x2c, r24	; 44
     dde:	8c b5       	in	r24, 0x2c	; 44
     de0:	83 60       	ori	r24, 0x03	; 3
     de2:	8c bd       	out	0x2c, r24	; 44
     de4:	8d b5       	in	r24, 0x2d	; 45
     de6:	8e 7f       	andi	r24, 0xFE	; 254
     de8:	8d bd       	out	0x2d, r24	; 45
     dea:	08 95       	ret

00000dec <mmc_disk_initialize>:
     dec:	ef 92       	push	r14
     dee:	ff 92       	push	r15
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	00 d0       	rcall	.+0      	; 0xdfa <mmc_disk_initialize+0xe>
     dfa:	00 d0       	rcall	.+0      	; 0xdfc <mmc_disk_initialize+0x10>
     dfc:	cd b7       	in	r28, 0x3d	; 61
     dfe:	de b7       	in	r29, 0x3e	; 62
     e00:	18 b8       	out	0x08, r1	; 8
     e02:	8a e0       	ldi	r24, 0x0A	; 10
     e04:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <Timer1>
     e08:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
     e0c:	81 11       	cpse	r24, r1
     e0e:	fc cf       	rjmp	.-8      	; 0xe08 <mmc_disk_initialize+0x1c>
     e10:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e14:	81 ff       	sbrs	r24, 1
     e16:	03 c0       	rjmp	.+6      	; 0xe1e <mmc_disk_initialize+0x32>
     e18:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e1c:	b1 c0       	rjmp	.+354    	; 0xf80 <mmc_disk_initialize+0x194>
     e1e:	0e 94 dd 06 	call	0xdba	; 0xdba <power_on>
     e22:	8c b5       	in	r24, 0x2c	; 44
     e24:	83 60       	ori	r24, 0x03	; 3
     e26:	8c bd       	out	0x2c, r24	; 44
     e28:	8d b5       	in	r24, 0x2d	; 45
     e2a:	8e 7f       	andi	r24, 0xFE	; 254
     e2c:	8d bd       	out	0x2d, r24	; 45
     e2e:	1a e0       	ldi	r17, 0x0A	; 10
     e30:	04 c0       	rjmp	.+8      	; 0xe3a <mmc_disk_initialize+0x4e>
     e32:	8f ef       	ldi	r24, 0xFF	; 255
     e34:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     e38:	11 50       	subi	r17, 0x01	; 1
     e3a:	11 11       	cpse	r17, r1
     e3c:	fa cf       	rjmp	.-12     	; 0xe32 <mmc_disk_initialize+0x46>
     e3e:	40 e0       	ldi	r20, 0x00	; 0
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	ba 01       	movw	r22, r20
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     e4a:	81 30       	cpi	r24, 0x01	; 1
     e4c:	09 f0       	breq	.+2      	; 0xe50 <mmc_disk_initialize+0x64>
     e4e:	7e c0       	rjmp	.+252    	; 0xf4c <mmc_disk_initialize+0x160>
     e50:	84 e6       	ldi	r24, 0x64	; 100
     e52:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <Timer1>
     e56:	4a ea       	ldi	r20, 0xAA	; 170
     e58:	51 e0       	ldi	r21, 0x01	; 1
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	88 e0       	ldi	r24, 0x08	; 8
     e60:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     e64:	81 30       	cpi	r24, 0x01	; 1
     e66:	09 f0       	breq	.+2      	; 0xe6a <mmc_disk_initialize+0x7e>
     e68:	4a c0       	rjmp	.+148    	; 0xefe <mmc_disk_initialize+0x112>
     e6a:	0e c0       	rjmp	.+28     	; 0xe88 <mmc_disk_initialize+0x9c>
     e6c:	e0 2e       	mov	r14, r16
     e6e:	f1 2c       	mov	r15, r1
     e70:	8f ef       	ldi	r24, 0xFF	; 255
     e72:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     e76:	e1 e0       	ldi	r30, 0x01	; 1
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	ec 0f       	add	r30, r28
     e7c:	fd 1f       	adc	r31, r29
     e7e:	ee 0d       	add	r30, r14
     e80:	ff 1d       	adc	r31, r15
     e82:	80 83       	st	Z, r24
     e84:	0f 5f       	subi	r16, 0xFF	; 255
     e86:	01 c0       	rjmp	.+2      	; 0xe8a <mmc_disk_initialize+0x9e>
     e88:	01 2f       	mov	r16, r17
     e8a:	04 30       	cpi	r16, 0x04	; 4
     e8c:	78 f3       	brcs	.-34     	; 0xe6c <mmc_disk_initialize+0x80>
     e8e:	8b 81       	ldd	r24, Y+3	; 0x03
     e90:	81 30       	cpi	r24, 0x01	; 1
     e92:	09 f0       	breq	.+2      	; 0xe96 <mmc_disk_initialize+0xaa>
     e94:	5d c0       	rjmp	.+186    	; 0xf50 <mmc_disk_initialize+0x164>
     e96:	8c 81       	ldd	r24, Y+4	; 0x04
     e98:	8a 3a       	cpi	r24, 0xAA	; 170
     e9a:	09 f0       	breq	.+2      	; 0xe9e <mmc_disk_initialize+0xb2>
     e9c:	5b c0       	rjmp	.+182    	; 0xf54 <mmc_disk_initialize+0x168>
     e9e:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
     ea2:	88 23       	and	r24, r24
     ea4:	49 f0       	breq	.+18     	; 0xeb8 <mmc_disk_initialize+0xcc>
     ea6:	40 e0       	ldi	r20, 0x00	; 0
     ea8:	50 e0       	ldi	r21, 0x00	; 0
     eaa:	60 e0       	ldi	r22, 0x00	; 0
     eac:	70 e4       	ldi	r23, 0x40	; 64
     eae:	89 ea       	ldi	r24, 0xA9	; 169
     eb0:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     eb4:	81 11       	cpse	r24, r1
     eb6:	f3 cf       	rjmp	.-26     	; 0xe9e <mmc_disk_initialize+0xb2>
     eb8:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
     ebc:	88 23       	and	r24, r24
     ebe:	09 f4       	brne	.+2      	; 0xec2 <mmc_disk_initialize+0xd6>
     ec0:	4b c0       	rjmp	.+150    	; 0xf58 <mmc_disk_initialize+0x16c>
     ec2:	40 e0       	ldi	r20, 0x00	; 0
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	ba 01       	movw	r22, r20
     ec8:	8a e3       	ldi	r24, 0x3A	; 58
     eca:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     ece:	88 23       	and	r24, r24
     ed0:	79 f0       	breq	.+30     	; 0xef0 <mmc_disk_initialize+0x104>
     ed2:	10 e0       	ldi	r17, 0x00	; 0
     ed4:	48 c0       	rjmp	.+144    	; 0xf66 <mmc_disk_initialize+0x17a>
     ed6:	e1 2e       	mov	r14, r17
     ed8:	f1 2c       	mov	r15, r1
     eda:	8f ef       	ldi	r24, 0xFF	; 255
     edc:	0e 94 c1 05 	call	0xb82	; 0xb82 <xchg_spi>
     ee0:	e1 e0       	ldi	r30, 0x01	; 1
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	ec 0f       	add	r30, r28
     ee6:	fd 1f       	adc	r31, r29
     ee8:	ee 0d       	add	r30, r14
     eea:	ff 1d       	adc	r31, r15
     eec:	80 83       	st	Z, r24
     eee:	1f 5f       	subi	r17, 0xFF	; 255
     ef0:	14 30       	cpi	r17, 0x04	; 4
     ef2:	88 f3       	brcs	.-30     	; 0xed6 <mmc_disk_initialize+0xea>
     ef4:	89 81       	ldd	r24, Y+1	; 0x01
     ef6:	86 ff       	sbrs	r24, 6
     ef8:	31 c0       	rjmp	.+98     	; 0xf5c <mmc_disk_initialize+0x170>
     efa:	18 e1       	ldi	r17, 0x18	; 24
     efc:	34 c0       	rjmp	.+104    	; 0xf66 <mmc_disk_initialize+0x17a>
     efe:	40 e0       	ldi	r20, 0x00	; 0
     f00:	50 e0       	ldi	r21, 0x00	; 0
     f02:	ba 01       	movw	r22, r20
     f04:	89 ea       	ldi	r24, 0xA9	; 169
     f06:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     f0a:	82 30       	cpi	r24, 0x02	; 2
     f0c:	18 f4       	brcc	.+6      	; 0xf14 <mmc_disk_initialize+0x128>
     f0e:	14 e0       	ldi	r17, 0x04	; 4
     f10:	09 ea       	ldi	r16, 0xA9	; 169
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <mmc_disk_initialize+0x12c>
     f14:	11 e0       	ldi	r17, 0x01	; 1
     f16:	01 e0       	ldi	r16, 0x01	; 1
     f18:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
     f1c:	88 23       	and	r24, r24
     f1e:	41 f0       	breq	.+16     	; 0xf30 <mmc_disk_initialize+0x144>
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	ba 01       	movw	r22, r20
     f26:	80 2f       	mov	r24, r16
     f28:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     f2c:	81 11       	cpse	r24, r1
     f2e:	f4 cf       	rjmp	.-24     	; 0xf18 <mmc_disk_initialize+0x12c>
     f30:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
     f34:	88 23       	and	r24, r24
     f36:	a1 f0       	breq	.+40     	; 0xf60 <mmc_disk_initialize+0x174>
     f38:	40 e0       	ldi	r20, 0x00	; 0
     f3a:	52 e0       	ldi	r21, 0x02	; 2
     f3c:	60 e0       	ldi	r22, 0x00	; 0
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	80 e1       	ldi	r24, 0x10	; 16
     f42:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     f46:	81 11       	cpse	r24, r1
     f48:	0d c0       	rjmp	.+26     	; 0xf64 <mmc_disk_initialize+0x178>
     f4a:	0d c0       	rjmp	.+26     	; 0xf66 <mmc_disk_initialize+0x17a>
     f4c:	10 e0       	ldi	r17, 0x00	; 0
     f4e:	0b c0       	rjmp	.+22     	; 0xf66 <mmc_disk_initialize+0x17a>
     f50:	10 e0       	ldi	r17, 0x00	; 0
     f52:	09 c0       	rjmp	.+18     	; 0xf66 <mmc_disk_initialize+0x17a>
     f54:	10 e0       	ldi	r17, 0x00	; 0
     f56:	07 c0       	rjmp	.+14     	; 0xf66 <mmc_disk_initialize+0x17a>
     f58:	10 e0       	ldi	r17, 0x00	; 0
     f5a:	05 c0       	rjmp	.+10     	; 0xf66 <mmc_disk_initialize+0x17a>
     f5c:	18 e0       	ldi	r17, 0x08	; 8
     f5e:	03 c0       	rjmp	.+6      	; 0xf66 <mmc_disk_initialize+0x17a>
     f60:	10 e0       	ldi	r17, 0x00	; 0
     f62:	01 c0       	rjmp	.+2      	; 0xf66 <mmc_disk_initialize+0x17a>
     f64:	10 e0       	ldi	r17, 0x00	; 0
     f66:	10 93 1e 01 	sts	0x011E, r17	; 0x80011e <CardType>
     f6a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <deselect>
     f6e:	11 23       	and	r17, r17
     f70:	29 f0       	breq	.+10     	; 0xf7c <mmc_disk_initialize+0x190>
     f72:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f76:	8e 7f       	andi	r24, 0xFE	; 254
     f78:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     f7c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f80:	0f 90       	pop	r0
     f82:	0f 90       	pop	r0
     f84:	0f 90       	pop	r0
     f86:	0f 90       	pop	r0
     f88:	df 91       	pop	r29
     f8a:	cf 91       	pop	r28
     f8c:	1f 91       	pop	r17
     f8e:	0f 91       	pop	r16
     f90:	ff 90       	pop	r15
     f92:	ef 90       	pop	r14
     f94:	08 95       	ret

00000f96 <mmc_disk_status>:
     f96:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f9a:	08 95       	ret

00000f9c <mmc_disk_read>:
     f9c:	ff 92       	push	r15
     f9e:	0f 93       	push	r16
     fa0:	1f 93       	push	r17
     fa2:	cf 93       	push	r28
     fa4:	df 93       	push	r29
     fa6:	8c 01       	movw	r16, r24
     fa8:	e9 01       	movw	r28, r18
     faa:	20 97       	sbiw	r28, 0x00	; 0
     fac:	e1 f1       	breq	.+120    	; 0x1026 <mmc_disk_read+0x8a>
     fae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fb2:	80 fd       	sbrc	r24, 0
     fb4:	3a c0       	rjmp	.+116    	; 0x102a <mmc_disk_read+0x8e>
     fb6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <CardType>
     fba:	84 fd       	sbrc	r24, 4
     fbc:	09 c0       	rjmp	.+18     	; 0xfd0 <mmc_disk_read+0x34>
     fbe:	03 2e       	mov	r0, r19
     fc0:	39 e0       	ldi	r19, 0x09	; 9
     fc2:	44 0f       	add	r20, r20
     fc4:	55 1f       	adc	r21, r21
     fc6:	66 1f       	adc	r22, r22
     fc8:	77 1f       	adc	r23, r23
     fca:	3a 95       	dec	r19
     fcc:	d1 f7       	brne	.-12     	; 0xfc2 <mmc_disk_read+0x26>
     fce:	30 2d       	mov	r19, r0
     fd0:	c2 30       	cpi	r28, 0x02	; 2
     fd2:	d1 05       	cpc	r29, r1
     fd4:	28 f0       	brcs	.+10     	; 0xfe0 <mmc_disk_read+0x44>
     fd6:	0f 2e       	mov	r0, r31
     fd8:	f2 e1       	ldi	r31, 0x12	; 18
     fda:	ff 2e       	mov	r15, r31
     fdc:	f0 2d       	mov	r31, r0
     fde:	04 c0       	rjmp	.+8      	; 0xfe8 <mmc_disk_read+0x4c>
     fe0:	0f 2e       	mov	r0, r31
     fe2:	f1 e1       	ldi	r31, 0x11	; 17
     fe4:	ff 2e       	mov	r15, r31
     fe6:	f0 2d       	mov	r31, r0
     fe8:	8f 2d       	mov	r24, r15
     fea:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
     fee:	81 11       	cpse	r24, r1
     ff0:	13 c0       	rjmp	.+38     	; 0x1018 <mmc_disk_read+0x7c>
     ff2:	60 e0       	ldi	r22, 0x00	; 0
     ff4:	72 e0       	ldi	r23, 0x02	; 2
     ff6:	c8 01       	movw	r24, r16
     ff8:	0e 94 3d 06 	call	0xc7a	; 0xc7a <rcvr_datablock>
     ffc:	89 2b       	or	r24, r25
     ffe:	19 f0       	breq	.+6      	; 0x1006 <mmc_disk_read+0x6a>
    1000:	1e 5f       	subi	r17, 0xFE	; 254
    1002:	21 97       	sbiw	r28, 0x01	; 1
    1004:	b1 f7       	brne	.-20     	; 0xff2 <mmc_disk_read+0x56>
    1006:	82 e1       	ldi	r24, 0x12	; 18
    1008:	f8 12       	cpse	r15, r24
    100a:	06 c0       	rjmp	.+12     	; 0x1018 <mmc_disk_read+0x7c>
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	50 e0       	ldi	r21, 0x00	; 0
    1010:	ba 01       	movw	r22, r20
    1012:	8c e0       	ldi	r24, 0x0C	; 12
    1014:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
    1018:	0e 94 1e 06 	call	0xc3c	; 0xc3c <deselect>
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	cd 2b       	or	r28, r29
    1020:	29 f4       	brne	.+10     	; 0x102c <mmc_disk_read+0x90>
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	03 c0       	rjmp	.+6      	; 0x102c <mmc_disk_read+0x90>
    1026:	84 e0       	ldi	r24, 0x04	; 4
    1028:	01 c0       	rjmp	.+2      	; 0x102c <mmc_disk_read+0x90>
    102a:	83 e0       	ldi	r24, 0x03	; 3
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	1f 91       	pop	r17
    1032:	0f 91       	pop	r16
    1034:	ff 90       	pop	r15
    1036:	08 95       	ret

00001038 <mmc_disk_write>:
    1038:	cf 92       	push	r12
    103a:	df 92       	push	r13
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	8c 01       	movw	r16, r24
    104a:	6a 01       	movw	r12, r20
    104c:	7b 01       	movw	r14, r22
    104e:	e9 01       	movw	r28, r18
    1050:	20 97       	sbiw	r28, 0x00	; 0
    1052:	09 f4       	brne	.+2      	; 0x1056 <mmc_disk_write+0x1e>
    1054:	52 c0       	rjmp	.+164    	; 0x10fa <mmc_disk_write+0xc2>
    1056:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    105a:	80 fd       	sbrc	r24, 0
    105c:	50 c0       	rjmp	.+160    	; 0x10fe <mmc_disk_write+0xc6>
    105e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1062:	82 fd       	sbrc	r24, 2
    1064:	4e c0       	rjmp	.+156    	; 0x1102 <mmc_disk_write+0xca>
    1066:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <CardType>
    106a:	84 fd       	sbrc	r24, 4
    106c:	09 c0       	rjmp	.+18     	; 0x1080 <mmc_disk_write+0x48>
    106e:	0b 2e       	mov	r0, r27
    1070:	b9 e0       	ldi	r27, 0x09	; 9
    1072:	cc 0c       	add	r12, r12
    1074:	dd 1c       	adc	r13, r13
    1076:	ee 1c       	adc	r14, r14
    1078:	ff 1c       	adc	r15, r15
    107a:	ba 95       	dec	r27
    107c:	d1 f7       	brne	.-12     	; 0x1072 <mmc_disk_write+0x3a>
    107e:	b0 2d       	mov	r27, r0
    1080:	c1 30       	cpi	r28, 0x01	; 1
    1082:	d1 05       	cpc	r29, r1
    1084:	71 f4       	brne	.+28     	; 0x10a2 <mmc_disk_write+0x6a>
    1086:	b7 01       	movw	r22, r14
    1088:	a6 01       	movw	r20, r12
    108a:	88 e1       	ldi	r24, 0x18	; 24
    108c:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
    1090:	81 11       	cpse	r24, r1
    1092:	2c c0       	rjmp	.+88     	; 0x10ec <mmc_disk_write+0xb4>
    1094:	6e ef       	ldi	r22, 0xFE	; 254
    1096:	c8 01       	movw	r24, r16
    1098:	0e 94 65 06 	call	0xcca	; 0xcca <xmit_datablock>
    109c:	89 2b       	or	r24, r25
    109e:	09 f5       	brne	.+66     	; 0x10e2 <mmc_disk_write+0xaa>
    10a0:	25 c0       	rjmp	.+74     	; 0x10ec <mmc_disk_write+0xb4>
    10a2:	8c 70       	andi	r24, 0x0C	; 12
    10a4:	31 f0       	breq	.+12     	; 0x10b2 <mmc_disk_write+0x7a>
    10a6:	ae 01       	movw	r20, r28
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	87 e9       	ldi	r24, 0x97	; 151
    10ae:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
    10b2:	b7 01       	movw	r22, r14
    10b4:	a6 01       	movw	r20, r12
    10b6:	89 e1       	ldi	r24, 0x19	; 25
    10b8:	0e 94 91 06 	call	0xd22	; 0xd22 <send_cmd>
    10bc:	81 11       	cpse	r24, r1
    10be:	16 c0       	rjmp	.+44     	; 0x10ec <mmc_disk_write+0xb4>
    10c0:	6c ef       	ldi	r22, 0xFC	; 252
    10c2:	c8 01       	movw	r24, r16
    10c4:	0e 94 65 06 	call	0xcca	; 0xcca <xmit_datablock>
    10c8:	89 2b       	or	r24, r25
    10ca:	19 f0       	breq	.+6      	; 0x10d2 <mmc_disk_write+0x9a>
    10cc:	1e 5f       	subi	r17, 0xFE	; 254
    10ce:	21 97       	sbiw	r28, 0x01	; 1
    10d0:	b9 f7       	brne	.-18     	; 0x10c0 <mmc_disk_write+0x88>
    10d2:	6d ef       	ldi	r22, 0xFD	; 253
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	0e 94 65 06 	call	0xcca	; 0xcca <xmit_datablock>
    10dc:	89 2b       	or	r24, r25
    10de:	21 f0       	breq	.+8      	; 0x10e8 <mmc_disk_write+0xb0>
    10e0:	05 c0       	rjmp	.+10     	; 0x10ec <mmc_disk_write+0xb4>
    10e2:	c0 e0       	ldi	r28, 0x00	; 0
    10e4:	d0 e0       	ldi	r29, 0x00	; 0
    10e6:	02 c0       	rjmp	.+4      	; 0x10ec <mmc_disk_write+0xb4>
    10e8:	c1 e0       	ldi	r28, 0x01	; 1
    10ea:	d0 e0       	ldi	r29, 0x00	; 0
    10ec:	0e 94 1e 06 	call	0xc3c	; 0xc3c <deselect>
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	cd 2b       	or	r28, r29
    10f4:	39 f4       	brne	.+14     	; 0x1104 <mmc_disk_write+0xcc>
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	05 c0       	rjmp	.+10     	; 0x1104 <mmc_disk_write+0xcc>
    10fa:	84 e0       	ldi	r24, 0x04	; 4
    10fc:	03 c0       	rjmp	.+6      	; 0x1104 <mmc_disk_write+0xcc>
    10fe:	83 e0       	ldi	r24, 0x03	; 3
    1100:	01 c0       	rjmp	.+2      	; 0x1104 <mmc_disk_write+0xcc>
    1102:	82 e0       	ldi	r24, 0x02	; 2
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	1f 91       	pop	r17
    110a:	0f 91       	pop	r16
    110c:	ff 90       	pop	r15
    110e:	ef 90       	pop	r14
    1110:	df 90       	pop	r13
    1112:	cf 90       	pop	r12
    1114:	08 95       	ret

00001116 <mmc_disk_timerproc>:
{
	BYTE b;
	UINT n;


	b = Timer1;				/* 100Hz decrement timer */
    1116:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <Timer1>
	if (b) Timer1 = --b;
    111a:	88 23       	and	r24, r24
    111c:	19 f0       	breq	.+6      	; 0x1124 <mmc_disk_timerproc+0xe>
    111e:	81 50       	subi	r24, 0x01	; 1
    1120:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <Timer1>
	n = Timer2;
    1124:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <Timer2>
    1128:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <Timer2+0x1>
	if (n) Timer2 = --n;
    112c:	00 97       	sbiw	r24, 0x00	; 0
    112e:	29 f0       	breq	.+10     	; 0x113a <mmc_disk_timerproc+0x24>
    1130:	01 97       	sbiw	r24, 0x01	; 1
    1132:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <Timer2+0x1>
    1136:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <Timer2>

	b = Stat;
    113a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
		b |= STA_PROTECT;
	} else {					/* Write enabled */
		b &= ~STA_PROTECT;
	}
	if (MMC_CD) {				/* Card inserted */
		b &= ~STA_NODISK;
    113e:	89 7f       	andi	r24, 0xF9	; 249
	} else {					/* Socket empty */
		b |= (STA_NODISK | STA_NOINIT);
	}
	Stat = b;				/* Update MMC status */
    1140:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1144:	08 95       	ret

00001146 <__udivmodsi4>:
    1146:	a1 e2       	ldi	r26, 0x21	; 33
    1148:	1a 2e       	mov	r1, r26
    114a:	aa 1b       	sub	r26, r26
    114c:	bb 1b       	sub	r27, r27
    114e:	fd 01       	movw	r30, r26
    1150:	0d c0       	rjmp	.+26     	; 0x116c <__udivmodsi4_ep>

00001152 <__udivmodsi4_loop>:
    1152:	aa 1f       	adc	r26, r26
    1154:	bb 1f       	adc	r27, r27
    1156:	ee 1f       	adc	r30, r30
    1158:	ff 1f       	adc	r31, r31
    115a:	a2 17       	cp	r26, r18
    115c:	b3 07       	cpc	r27, r19
    115e:	e4 07       	cpc	r30, r20
    1160:	f5 07       	cpc	r31, r21
    1162:	20 f0       	brcs	.+8      	; 0x116c <__udivmodsi4_ep>
    1164:	a2 1b       	sub	r26, r18
    1166:	b3 0b       	sbc	r27, r19
    1168:	e4 0b       	sbc	r30, r20
    116a:	f5 0b       	sbc	r31, r21

0000116c <__udivmodsi4_ep>:
    116c:	66 1f       	adc	r22, r22
    116e:	77 1f       	adc	r23, r23
    1170:	88 1f       	adc	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	1a 94       	dec	r1
    1176:	69 f7       	brne	.-38     	; 0x1152 <__udivmodsi4_loop>
    1178:	60 95       	com	r22
    117a:	70 95       	com	r23
    117c:	80 95       	com	r24
    117e:	90 95       	com	r25
    1180:	9b 01       	movw	r18, r22
    1182:	ac 01       	movw	r20, r24
    1184:	bd 01       	movw	r22, r26
    1186:	cf 01       	movw	r24, r30
    1188:	08 95       	ret

0000118a <__umulhisi3>:
    118a:	a2 9f       	mul	r26, r18
    118c:	b0 01       	movw	r22, r0
    118e:	b3 9f       	mul	r27, r19
    1190:	c0 01       	movw	r24, r0
    1192:	a3 9f       	mul	r26, r19
    1194:	70 0d       	add	r23, r0
    1196:	81 1d       	adc	r24, r1
    1198:	11 24       	eor	r1, r1
    119a:	91 1d       	adc	r25, r1
    119c:	b2 9f       	mul	r27, r18
    119e:	70 0d       	add	r23, r0
    11a0:	81 1d       	adc	r24, r1
    11a2:	11 24       	eor	r1, r1
    11a4:	91 1d       	adc	r25, r1
    11a6:	08 95       	ret

000011a8 <__muluhisi3>:
    11a8:	0e 94 c5 08 	call	0x118a	; 0x118a <__umulhisi3>
    11ac:	a5 9f       	mul	r26, r21
    11ae:	90 0d       	add	r25, r0
    11b0:	b4 9f       	mul	r27, r20
    11b2:	90 0d       	add	r25, r0
    11b4:	a4 9f       	mul	r26, r20
    11b6:	80 0d       	add	r24, r0
    11b8:	91 1d       	adc	r25, r1
    11ba:	11 24       	eor	r1, r1
    11bc:	08 95       	ret

000011be <memcmp>:
    11be:	fb 01       	movw	r30, r22
    11c0:	dc 01       	movw	r26, r24
    11c2:	04 c0       	rjmp	.+8      	; 0x11cc <memcmp+0xe>
    11c4:	8d 91       	ld	r24, X+
    11c6:	01 90       	ld	r0, Z+
    11c8:	80 19       	sub	r24, r0
    11ca:	21 f4       	brne	.+8      	; 0x11d4 <memcmp+0x16>
    11cc:	41 50       	subi	r20, 0x01	; 1
    11ce:	50 40       	sbci	r21, 0x00	; 0
    11d0:	c8 f7       	brcc	.-14     	; 0x11c4 <memcmp+0x6>
    11d2:	88 1b       	sub	r24, r24
    11d4:	99 0b       	sbc	r25, r25
    11d6:	08 95       	ret

000011d8 <_exit>:
    11d8:	f8 94       	cli

000011da <__stop_program>:
    11da:	ff cf       	rjmp	.-2      	; 0x11da <__stop_program>
