
WriteToEEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000144  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000144  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000174  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b91  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a4a  00000000  00000000  00000d81  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033b  00000000  00000000  000017cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00001b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f1  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000053  00000000  00000000  00002029  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000207c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
   8:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
   c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  10:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  14:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  18:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  1c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  20:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  24:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  28:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  2c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  30:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  34:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  38:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  3c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  40:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  44:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  48:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  4c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  50:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  54:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  58:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  5c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  60:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  64:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  68:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  6c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  70:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  74:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  78:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  7c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  80:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  84:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  88:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  8c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
  90:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61
  a0:	0e 94 56 00 	call	0xac	; 0xac <main>
  a4:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

000000a8 <__bad_interrupt>:
  a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ac <main>:
#include <util/delay.h>

void writeFloatToEEPROM(float value, int address);

int main(void)
{
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
	for (int i = 0; i<2000; i++)
  b0:	c0 e0       	ldi	r28, 0x00	; 0
  b2:	d0 e0       	ldi	r29, 0x00	; 0
  b4:	05 c0       	rjmp	.+10     	; 0xc0 <main+0x14>
	{
		eeprom_write_byte((uint8_t*)i, 0xFF);
  b6:	6f ef       	ldi	r22, 0xFF	; 255
  b8:	ce 01       	movw	r24, r28
  ba:	0e 94 69 00 	call	0xd2	; 0xd2 <eeprom_write_byte>

void writeFloatToEEPROM(float value, int address);

int main(void)
{
	for (int i = 0; i<2000; i++)
  be:	21 96       	adiw	r28, 0x01	; 1
  c0:	c0 3d       	cpi	r28, 0xD0	; 208
  c2:	87 e0       	ldi	r24, 0x07	; 7
  c4:	d8 07       	cpc	r29, r24
  c6:	bc f3       	brlt	.-18     	; 0xb6 <main+0xa>
	{
		eeprom_write_byte((uint8_t*)i, 0xFF);
	}
}
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <eeprom_write_byte>:
  d2:	26 2f       	mov	r18, r22

000000d4 <eeprom_write_r18>:
  d4:	f9 99       	sbic	0x1f, 1	; 31
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <eeprom_write_r18>
  d8:	92 bd       	out	0x22, r25	; 34
  da:	81 bd       	out	0x21, r24	; 33
  dc:	20 bd       	out	0x20, r18	; 32
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	f8 94       	cli
  e2:	fa 9a       	sbi	0x1f, 2	; 31
  e4:	f9 9a       	sbi	0x1f, 1	; 31
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	01 96       	adiw	r24, 0x01	; 1
  ea:	08 95       	ret

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>
